CCS PCM C Compiler, Version 5.015, 5967               23-Apr-22 17:10

               Filename:   D:\STUDY\PIC\1-GPIO\ccs\main.lst

               ROM used:   74 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   034 (RETURN)
....................  
....................  
.................... #include <var.h> 
.................... #ifndef _VAR_ 
.................... #define _VAR_ 
....................    //const unsigned char  chu_so[10] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90}; 
....................    //gia tri tren led 7 thanh          0  1     2    3     4    5   6     7   8    9 
....................    //const unsigned char OFF_LED=0xff; 
....................    //unsigned char buffer[3]; 
.................... #endif                                           
....................  
.................... #define LED pin_d0 
.................... #define BUTTON pin_a5 
.................... void main() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
0025:  BCF    03.5
0026:  BCF    21.0
.................... { 
....................    boolean LedState = 0; 
....................    output_drive(LED); 
0027:  BSF    03.5
0028:  BCF    08.0
....................    output_low(LED); 
0029:  BCF    08.0
002A:  BCF    03.5
002B:  BCF    08.0
....................    while(TRUE) 
....................    { 
....................       if(input(BUTTON)==0) 
002C:  BSF    03.5
002D:  BSF    05.5
002E:  BCF    03.5
002F:  BTFSC  05.5
0030:  GOTO   048
....................       { 
....................          delay_ms(10); 
0031:  MOVLW  0A
0032:  MOVWF  22
0033:  GOTO   004
....................          if(input(BUTTON)==0) 
0034:  BSF    03.5
0035:  BSF    05.5
0036:  BCF    03.5
0037:  BTFSC  05.5
0038:  GOTO   043
....................          { 
....................             LedState = !LedState; 
0039:  MOVLW  01
003A:  XORWF  21,F
....................             output_bit(LED,LedState); 
003B:  BTFSC  21.0
003C:  GOTO   03F
003D:  BCF    08.0
003E:  GOTO   040
003F:  BSF    08.0
0040:  BSF    03.5
0041:  BCF    08.0
0042:  BCF    03.5
....................          } 
....................          while(input(BUTTON)==0); 
0043:  BSF    03.5
0044:  BSF    05.5
0045:  BCF    03.5
0046:  BTFSS  05.5
0047:  GOTO   043
....................       } 
0048:  GOTO   02C
....................    } 
....................  
.................... } 
0049:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
