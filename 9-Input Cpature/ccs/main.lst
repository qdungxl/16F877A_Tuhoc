CCS PCM C Compiler, Version 5.015, 5967               24-Apr-22 10:32

               Filename:   D:\STUDY\PIC\9-Input Cpature\ccs\main.lst

               ROM used:   1344 words (16%)
                           Largest free fragment is 2048
               RAM used:   54 (15%) at main() level
                           83 (23%) worst case
               Stack used: 4 locations (3 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  04
0001:  MOVWF  0A
0002:  GOTO   4BD
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  MOVLW  8C
0028:  MOVWF  04
0029:  BTFSS  00.0
002A:  GOTO   02D
002B:  BTFSC  0C.0
002C:  GOTO   054
002D:  MOVLW  8D
002E:  MOVWF  04
002F:  BTFSS  00.0
0030:  GOTO   033
0031:  BTFSC  0D.0
0032:  GOTO   057
0033:  MOVF   22,W
0034:  MOVWF  04
0035:  MOVF   23,W
0036:  MOVWF  77
0037:  MOVF   24,W
0038:  MOVWF  78
0039:  MOVF   25,W
003A:  MOVWF  79
003B:  MOVF   26,W
003C:  MOVWF  7A
003D:  MOVF   27,W
003E:  BSF    03.6
003F:  MOVWF  0D
0040:  BCF    03.6
0041:  MOVF   28,W
0042:  BSF    03.6
0043:  MOVWF  0F
0044:  BCF    03.6
0045:  MOVF   29,W
0046:  BSF    03.6
0047:  MOVWF  0C
0048:  BCF    03.6
0049:  MOVF   2A,W
004A:  BSF    03.6
004B:  MOVWF  0E
004C:  BCF    03.6
004D:  MOVF   20,W
004E:  MOVWF  0A
004F:  SWAPF  21,W
0050:  MOVWF  03
0051:  SWAPF  7F,F
0052:  SWAPF  7F,W
0053:  RETFIE
0054:  BCF    0A.3
0055:  BCF    0A.4
0056:  GOTO   090
0057:  BCF    0A.3
0058:  BCF    0A.4
0059:  GOTO   05A
.................... #include <main.h> 
.................... /** 
....................   ****************************************************************************** 
....................   * Ten Tep      :        main.h 
....................   * Tac Gia      :        Nguyen Quy Nhat 
....................   * Cong Ty      :        MinhHaGroup 
....................   * Website      :        BanLinhKien.Vn 
....................   * Phien Ban    :        V1.0.0 
....................   * Ngay         :        31-08-2012 
....................   * Tom Tat      :        Khai bao cac thu vien. 
....................   *                       Cau hinh mot so chuc nang cho trinh bien dich. 
....................   *                       Cau hinh mot so chuc nang cho CHIP. 
....................   *                       Dinh nghia I/O. 
....................   *            
....................   * 
....................   ****************************************************************************** 
....................   * Chu Y      :           
....................   *                           
....................   *                       
....................   ****************************************************************************** 
....................   */ 
.................... #ifndef _MAIN_ 
.................... #define _MAIN_ 
.................... /***************KHAI BAO CAC THU VIEN*****************/    
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
00A0:  DATA 49,27
00A1:  DATA D0,2A
00A2:  DATA 54,10
00A3:  DATA C3,20
00A4:  DATA 50,2A
00A5:  DATA 55,29
00A6:  DATA 45,00
00A7:  DATA D4,30
00A8:  DATA 6E,10
00A9:  DATA D3,37
00AA:  DATA 3D,10
00AB:  DATA 25,1B
00AC:  DATA AE,18
00AD:  DATA 66,00
*
0135:  MOVF   36,W
0136:  MOVWF  04
0137:  BCF    03.7
0138:  BTFSC  37.0
0139:  BSF    03.7
013A:  MOVF   5D,W
013B:  MOVWF  00
013C:  INCF   04,F
013D:  CLRF   00
013E:  INCF   36,F
013F:  BTFSC  03.2
0140:  INCF   37,F
0141:  RETURN
0142:  MOVF   0B,W
0143:  MOVWF  50
0144:  BCF    0B.7
0145:  BSF    03.5
0146:  BSF    03.6
0147:  BSF    0C.7
0148:  BSF    0C.0
0149:  NOP
014A:  NOP
014B:  BCF    03.5
014C:  BCF    03.6
014D:  BTFSC  50.7
014E:  BSF    0B.7
014F:  BSF    03.6
0150:  MOVF   0C,W
0151:  ANDLW  7F
0152:  BTFSC  03.2
0153:  GOTO   196
0154:  BCF    03.6
0155:  MOVWF  50
0156:  BSF    03.6
0157:  MOVF   0D,W
0158:  BCF    03.6
0159:  MOVWF  51
015A:  BSF    03.6
015B:  MOVF   0F,W
015C:  BCF    03.6
015D:  MOVWF  52
015E:  MOVF   50,W
015F:  MOVWF  5D
0160:  CALL   135
0161:  MOVF   51,W
0162:  BSF    03.6
0163:  MOVWF  0D
0164:  BCF    03.6
0165:  MOVF   52,W
0166:  BSF    03.6
0167:  MOVWF  0F
0168:  BCF    03.6
0169:  MOVF   0B,W
016A:  MOVWF  53
016B:  BCF    0B.7
016C:  BSF    03.5
016D:  BSF    03.6
016E:  BSF    0C.7
016F:  BSF    0C.0
0170:  NOP
0171:  NOP
0172:  BCF    03.5
0173:  BCF    03.6
0174:  BTFSC  53.7
0175:  BSF    0B.7
0176:  BSF    03.6
0177:  RLF    0C,W
0178:  RLF    0E,W
0179:  ANDLW  7F
017A:  BTFSC  03.2
017B:  GOTO   196
017C:  BCF    03.6
017D:  MOVWF  50
017E:  BSF    03.6
017F:  MOVF   0D,W
0180:  BCF    03.6
0181:  MOVWF  51
0182:  BSF    03.6
0183:  MOVF   0F,W
0184:  BCF    03.6
0185:  MOVWF  52
0186:  MOVF   50,W
0187:  MOVWF  5D
0188:  CALL   135
0189:  MOVF   51,W
018A:  BSF    03.6
018B:  MOVWF  0D
018C:  BCF    03.6
018D:  MOVF   52,W
018E:  BSF    03.6
018F:  MOVWF  0F
0190:  INCF   0D,F
0191:  BTFSC  03.2
0192:  INCF   0F,F
0193:  BCF    03.6
0194:  GOTO   142
0195:  BSF    03.6
0196:  BCF    03.6
0197:  BCF    0A.3
0198:  BCF    0A.4
0199:  GOTO   4E1 (RETURN)
*
01C1:  MOVLW  B6
01C2:  MOVWF  77
01C3:  CLRF   7A
01C4:  CLRF   79
01C5:  CLRF   78
01C6:  MOVF   50,W
01C7:  IORWF  51,W
01C8:  IORWF  52,W
01C9:  IORWF  53,W
01CA:  BTFSS  03.2
01CB:  GOTO   1CE
01CC:  CLRF   77
01CD:  GOTO   1DB
01CE:  BCF    03.0
01CF:  BTFSC  78.7
01D0:  GOTO   1DA
01D1:  RLF    50,F
01D2:  RLF    51,F
01D3:  RLF    52,F
01D4:  RLF    53,F
01D5:  RLF    7A,F
01D6:  RLF    79,F
01D7:  RLF    78,F
01D8:  DECFSZ 77,F
01D9:  GOTO   1CE
01DA:  BCF    78.7
01DB:  BCF    0A.3
01DC:  BCF    0A.4
01DD:  GOTO   504 (RETURN)
01DE:  MOVF   50,W
01DF:  BTFSC  03.2
01E0:  GOTO   2A3
01E1:  MOVWF  5C
01E2:  MOVF   54,W
01E3:  BTFSC  03.2
01E4:  GOTO   2A3
01E5:  SUBWF  5C,F
01E6:  BTFSS  03.0
01E7:  GOTO   1ED
01E8:  MOVLW  7F
01E9:  ADDWF  5C,F
01EA:  BTFSC  03.0
01EB:  GOTO   2A3
01EC:  GOTO   1F3
01ED:  MOVLW  81
01EE:  SUBWF  5C,F
01EF:  BTFSS  03.0
01F0:  GOTO   2A3
01F1:  BTFSC  03.2
01F2:  GOTO   2A3
01F3:  MOVF   5C,W
01F4:  MOVWF  77
01F5:  CLRF   78
01F6:  CLRF   79
01F7:  CLRF   7A
01F8:  CLRF   5B
01F9:  MOVF   51,W
01FA:  MOVWF  5A
01FB:  BSF    5A.7
01FC:  MOVF   52,W
01FD:  MOVWF  59
01FE:  MOVF   53,W
01FF:  MOVWF  58
0200:  MOVLW  19
0201:  MOVWF  5C
0202:  MOVF   57,W
0203:  SUBWF  58,F
0204:  BTFSC  03.0
0205:  GOTO   216
0206:  MOVLW  01
0207:  SUBWF  59,F
0208:  BTFSC  03.0
0209:  GOTO   216
020A:  SUBWF  5A,F
020B:  BTFSC  03.0
020C:  GOTO   216
020D:  SUBWF  5B,F
020E:  BTFSC  03.0
020F:  GOTO   216
0210:  INCF   5B,F
0211:  INCF   5A,F
0212:  INCF   59,F
0213:  MOVF   57,W
0214:  ADDWF  58,F
0215:  GOTO   248
0216:  MOVF   56,W
0217:  SUBWF  59,F
0218:  BTFSC  03.0
0219:  GOTO   231
021A:  MOVLW  01
021B:  SUBWF  5A,F
021C:  BTFSC  03.0
021D:  GOTO   231
021E:  SUBWF  5B,F
021F:  BTFSC  03.0
0220:  GOTO   231
0221:  INCF   5B,F
0222:  INCF   5A,F
0223:  MOVF   56,W
0224:  ADDWF  59,F
0225:  MOVF   57,W
0226:  ADDWF  58,F
0227:  BTFSS  03.0
0228:  GOTO   248
0229:  INCF   59,F
022A:  BTFSS  03.2
022B:  GOTO   248
022C:  INCF   5A,F
022D:  BTFSS  03.2
022E:  GOTO   248
022F:  INCF   5B,F
0230:  GOTO   248
0231:  MOVF   55,W
0232:  IORLW  80
0233:  SUBWF  5A,F
0234:  BTFSC  03.0
0235:  GOTO   247
0236:  MOVLW  01
0237:  SUBWF  5B,F
0238:  BTFSC  03.0
0239:  GOTO   247
023A:  INCF   5B,F
023B:  MOVF   55,W
023C:  IORLW  80
023D:  ADDWF  5A,F
023E:  MOVF   56,W
023F:  ADDWF  59,F
0240:  BTFSS  03.0
0241:  GOTO   225
0242:  INCF   5A,F
0243:  BTFSS  03.2
0244:  GOTO   225
0245:  INCF   5B,F
0246:  GOTO   225
0247:  BSF    7A.0
0248:  DECFSZ 5C,F
0249:  GOTO   24B
024A:  GOTO   256
024B:  BCF    03.0
024C:  RLF    58,F
024D:  RLF    59,F
024E:  RLF    5A,F
024F:  RLF    5B,F
0250:  BCF    03.0
0251:  RLF    7A,F
0252:  RLF    79,F
0253:  RLF    78,F
0254:  RLF    5D,F
0255:  GOTO   202
0256:  BTFSS  5D.0
0257:  GOTO   25E
0258:  BCF    03.0
0259:  RRF    78,F
025A:  RRF    79,F
025B:  RRF    7A,F
025C:  RRF    5D,F
025D:  GOTO   261
025E:  DECF   77,F
025F:  BTFSC  03.2
0260:  GOTO   2A3
0261:  BTFSC  5D.7
0262:  GOTO   28A
0263:  BCF    03.0
0264:  RLF    58,F
0265:  RLF    59,F
0266:  RLF    5A,F
0267:  RLF    5B,F
0268:  MOVF   57,W
0269:  SUBWF  58,F
026A:  BTFSC  03.0
026B:  GOTO   276
026C:  MOVLW  01
026D:  SUBWF  59,F
026E:  BTFSC  03.0
026F:  GOTO   276
0270:  SUBWF  5A,F
0271:  BTFSC  03.0
0272:  GOTO   276
0273:  SUBWF  5B,F
0274:  BTFSS  03.0
0275:  GOTO   299
0276:  MOVF   56,W
0277:  SUBWF  59,F
0278:  BTFSC  03.0
0279:  GOTO   281
027A:  MOVLW  01
027B:  SUBWF  5A,F
027C:  BTFSC  03.0
027D:  GOTO   281
027E:  SUBWF  5B,F
027F:  BTFSS  03.0
0280:  GOTO   299
0281:  MOVF   55,W
0282:  IORLW  80
0283:  SUBWF  5A,F
0284:  BTFSC  03.0
0285:  GOTO   28A
0286:  MOVLW  01
0287:  SUBWF  5B,F
0288:  BTFSS  03.0
0289:  GOTO   299
028A:  INCF   7A,F
028B:  BTFSS  03.2
028C:  GOTO   299
028D:  INCF   79,F
028E:  BTFSS  03.2
028F:  GOTO   299
0290:  INCF   78,F
0291:  BTFSS  03.2
0292:  GOTO   299
0293:  INCF   77,F
0294:  BTFSC  03.2
0295:  GOTO   2A3
0296:  RRF    78,F
0297:  RRF    79,F
0298:  RRF    7A,F
0299:  MOVF   51,W
029A:  MOVWF  5C
029B:  MOVF   55,W
029C:  XORWF  5C,F
029D:  BTFSS  5C.7
029E:  GOTO   2A1
029F:  BSF    78.7
02A0:  GOTO   2A7
02A1:  BCF    78.7
02A2:  GOTO   2A7
02A3:  CLRF   77
02A4:  CLRF   78
02A5:  CLRF   79
02A6:  CLRF   7A
02A7:  BCF    0A.3
02A8:  BCF    0A.4
02A9:  GOTO   514 (RETURN)
*
02C0:  MOVF   0B,W
02C1:  MOVWF  51
02C2:  BCF    0B.7
02C3:  BSF    03.5
02C4:  BSF    03.6
02C5:  BSF    0C.7
02C6:  BSF    0C.0
02C7:  NOP
02C8:  NOP
02C9:  BCF    03.5
02CA:  BCF    03.6
02CB:  BTFSC  51.7
02CC:  BSF    0B.7
02CD:  BTFSC  03.0
02CE:  GOTO   2F7
02CF:  BSF    03.6
02D0:  MOVF   0C,W
02D1:  ANDLW  7F
02D2:  BCF    03.6
02D3:  MOVWF  51
02D4:  BSF    03.6
02D5:  MOVF   0D,W
02D6:  BCF    03.6
02D7:  MOVWF  52
02D8:  BSF    03.6
02D9:  MOVF   0F,W
02DA:  BCF    03.6
02DB:  MOVWF  53
02DC:  MOVF   51,W
02DD:  MOVWF  5D
02DE:  CALL   135
02DF:  MOVF   52,W
02E0:  BSF    03.6
02E1:  MOVWF  0D
02E2:  BCF    03.6
02E3:  MOVF   53,W
02E4:  BSF    03.6
02E5:  MOVWF  0F
02E6:  BCF    03.6
02E7:  MOVF   0B,W
02E8:  MOVWF  54
02E9:  BCF    0B.7
02EA:  BSF    03.5
02EB:  BSF    03.6
02EC:  BSF    0C.7
02ED:  BSF    0C.0
02EE:  NOP
02EF:  NOP
02F0:  BCF    03.5
02F1:  BCF    03.6
02F2:  BTFSC  54.7
02F3:  BSF    0B.7
02F4:  DECFSZ 50,F
02F5:  GOTO   2F7
02F6:  GOTO   316
02F7:  BSF    03.6
02F8:  RLF    0C,W
02F9:  RLF    0E,W
02FA:  ANDLW  7F
02FB:  BCF    03.6
02FC:  MOVWF  51
02FD:  BSF    03.6
02FE:  MOVF   0D,W
02FF:  BCF    03.6
0300:  MOVWF  52
0301:  BSF    03.6
0302:  MOVF   0F,W
0303:  BCF    03.6
0304:  MOVWF  53
0305:  MOVF   51,W
0306:  MOVWF  5D
0307:  CALL   135
0308:  MOVF   52,W
0309:  BSF    03.6
030A:  MOVWF  0D
030B:  BCF    03.6
030C:  MOVF   53,W
030D:  BSF    03.6
030E:  MOVWF  0F
030F:  INCF   0D,F
0310:  BTFSC  03.2
0311:  INCF   0F,F
0312:  BCF    03.0
0313:  BCF    03.6
0314:  DECFSZ 50,F
0315:  GOTO   2C0
0316:  BCF    0A.3
0317:  BCF    0A.4
0318:  GOTO   52D (RETURN)
0319:  BTFSC  03.1
031A:  GOTO   31E
031B:  MOVLW  65
031C:  MOVWF  04
031D:  BCF    03.7
031E:  CLRF   77
031F:  CLRF   78
0320:  CLRF   79
0321:  CLRF   7A
0322:  CLRF   65
0323:  CLRF   66
0324:  CLRF   67
0325:  CLRF   68
0326:  MOVF   64,W
0327:  IORWF  63,W
0328:  IORWF  62,W
0329:  IORWF  61,W
032A:  BTFSC  03.2
032B:  GOTO   35C
032C:  MOVLW  20
032D:  MOVWF  69
032E:  BCF    03.0
032F:  RLF    5D,F
0330:  RLF    5E,F
0331:  RLF    5F,F
0332:  RLF    60,F
0333:  RLF    65,F
0334:  RLF    66,F
0335:  RLF    67,F
0336:  RLF    68,F
0337:  MOVF   64,W
0338:  SUBWF  68,W
0339:  BTFSS  03.2
033A:  GOTO   345
033B:  MOVF   63,W
033C:  SUBWF  67,W
033D:  BTFSS  03.2
033E:  GOTO   345
033F:  MOVF   62,W
0340:  SUBWF  66,W
0341:  BTFSS  03.2
0342:  GOTO   345
0343:  MOVF   61,W
0344:  SUBWF  65,W
0345:  BTFSS  03.0
0346:  GOTO   356
0347:  MOVF   61,W
0348:  SUBWF  65,F
0349:  MOVF   62,W
034A:  BTFSS  03.0
034B:  INCFSZ 62,W
034C:  SUBWF  66,F
034D:  MOVF   63,W
034E:  BTFSS  03.0
034F:  INCFSZ 63,W
0350:  SUBWF  67,F
0351:  MOVF   64,W
0352:  BTFSS  03.0
0353:  INCFSZ 64,W
0354:  SUBWF  68,F
0355:  BSF    03.0
0356:  RLF    77,F
0357:  RLF    78,F
0358:  RLF    79,F
0359:  RLF    7A,F
035A:  DECFSZ 69,F
035B:  GOTO   32E
035C:  MOVF   65,W
035D:  MOVWF  00
035E:  INCF   04,F
035F:  MOVF   66,W
0360:  MOVWF  00
0361:  INCF   04,F
0362:  MOVF   67,W
0363:  MOVWF  00
0364:  INCF   04,F
0365:  MOVF   68,W
0366:  MOVWF  00
0367:  RETURN
0368:  MOVF   04,W
0369:  MOVWF  55
036A:  MOVF   54,W
036B:  MOVWF  57
036C:  BTFSC  03.2
036D:  GOTO   3FA
036E:  MOVF   53,W
036F:  MOVWF  60
0370:  MOVF   52,W
0371:  MOVWF  5F
0372:  MOVF   51,W
0373:  MOVWF  5E
0374:  MOVF   50,W
0375:  MOVWF  5D
0376:  CLRF   64
0377:  CLRF   63
0378:  MOVLW  20
0379:  MOVWF  62
037A:  MOVLW  82
037B:  MOVWF  61
037C:  MOVF   5D,W
037D:  BTFSC  03.2
037E:  GOTO   3EC
037F:  MOVWF  65
0380:  MOVF   61,W
0381:  BTFSC  03.2
0382:  GOTO   3EC
0383:  ADDWF  65,F
0384:  BTFSC  03.0
0385:  GOTO   38D
0386:  MOVLW  7F
0387:  SUBWF  65,F
0388:  BTFSS  03.0
0389:  GOTO   3EC
038A:  BTFSC  03.2
038B:  GOTO   3EC
038C:  GOTO   391
038D:  MOVLW  81
038E:  ADDWF  65,F
038F:  BTFSC  03.0
0390:  GOTO   3EC
0391:  MOVF   65,W
0392:  MOVWF  77
0393:  CLRF   78
0394:  CLRF   79
0395:  CLRF   7A
0396:  MOVF   5E,W
0397:  MOVWF  69
0398:  BSF    69.7
0399:  MOVF   5F,W
039A:  MOVWF  68
039B:  MOVF   60,W
039C:  MOVWF  67
039D:  MOVLW  18
039E:  MOVWF  65
039F:  CLRF   66
03A0:  BTFSS  67.0
03A1:  GOTO   3BA
03A2:  MOVF   64,W
03A3:  ADDWF  7A,F
03A4:  BTFSS  03.0
03A5:  GOTO   3AC
03A6:  INCF   79,F
03A7:  BTFSS  03.2
03A8:  GOTO   3AC
03A9:  INCF   78,F
03AA:  BTFSC  03.2
03AB:  BSF    66.7
03AC:  MOVF   63,W
03AD:  ADDWF  79,F
03AE:  BTFSS  03.0
03AF:  GOTO   3B3
03B0:  INCF   78,F
03B1:  BTFSC  03.2
03B2:  BSF    66.7
03B3:  MOVF   62,W
03B4:  MOVWF  5F
03B5:  BSF    5F.7
03B6:  MOVF   5F,W
03B7:  ADDWF  78,F
03B8:  BTFSC  03.0
03B9:  BSF    66.7
03BA:  RLF    66,F
03BB:  RRF    78,F
03BC:  RRF    79,F
03BD:  RRF    7A,F
03BE:  RRF    69,F
03BF:  RRF    68,F
03C0:  RRF    67,F
03C1:  BCF    03.0
03C2:  DECFSZ 65,F
03C3:  GOTO   39F
03C4:  MOVLW  01
03C5:  ADDWF  77,F
03C6:  BTFSC  03.0
03C7:  GOTO   3EC
03C8:  BTFSC  78.7
03C9:  GOTO   3D1
03CA:  RLF    69,F
03CB:  RLF    7A,F
03CC:  RLF    79,F
03CD:  RLF    78,F
03CE:  DECF   77,F
03CF:  BTFSC  03.2
03D0:  GOTO   3EC
03D1:  BTFSS  69.7
03D2:  GOTO   3E2
03D3:  INCF   7A,F
03D4:  BTFSS  03.2
03D5:  GOTO   3E2
03D6:  INCF   79,F
03D7:  BTFSS  03.2
03D8:  GOTO   3E2
03D9:  INCF   78,F
03DA:  BTFSS  03.2
03DB:  GOTO   3E2
03DC:  RRF    78,F
03DD:  RRF    79,F
03DE:  RRF    7A,F
03DF:  INCF   77,F
03E0:  BTFSC  03.2
03E1:  GOTO   3EC
03E2:  MOVF   5E,W
03E3:  MOVWF  66
03E4:  MOVF   62,W
03E5:  XORWF  66,F
03E6:  BTFSS  66.7
03E7:  GOTO   3EA
03E8:  BSF    78.7
03E9:  GOTO   3F0
03EA:  BCF    78.7
03EB:  GOTO   3F0
03EC:  CLRF   77
03ED:  CLRF   78
03EE:  CLRF   79
03EF:  CLRF   7A
03F0:  MOVF   7A,W
03F1:  MOVWF  53
03F2:  MOVF   79,W
03F3:  MOVWF  52
03F4:  MOVF   78,W
03F5:  MOVWF  51
03F6:  MOVF   77,W
03F7:  MOVWF  50
03F8:  DECFSZ 57,F
03F9:  GOTO   36E
03FA:  MOVF   53,W
03FB:  MOVWF  60
03FC:  MOVF   52,W
03FD:  MOVWF  5F
03FE:  MOVF   51,W
03FF:  MOVWF  5E
0400:  MOVF   50,W
0401:  MOVWF  5D
0402:  MOVF   5D,W
0403:  SUBLW  B6
0404:  MOVWF  5D
0405:  CLRF   7A
0406:  MOVF   5E,W
0407:  MOVWF  61
0408:  BSF    5E.7
0409:  BCF    03.0
040A:  RRF    5E,F
040B:  RRF    5F,F
040C:  RRF    60,F
040D:  RRF    7A,F
040E:  RRF    79,F
040F:  RRF    78,F
0410:  RRF    77,F
0411:  DECFSZ 5D,F
0412:  GOTO   409
0413:  BTFSS  61.7
0414:  GOTO   420
0415:  COMF   77,F
0416:  COMF   78,F
0417:  COMF   79,F
0418:  COMF   7A,F
0419:  INCF   77,F
041A:  BTFSC  03.2
041B:  INCF   78,F
041C:  BTFSC  03.2
041D:  INCF   79,F
041E:  BTFSC  03.2
041F:  INCF   7A,F
0420:  MOVF   7A,W
0421:  MOVWF  53
0422:  MOVF   79,W
0423:  MOVWF  52
0424:  MOVF   78,W
0425:  MOVWF  51
0426:  MOVF   77,W
0427:  MOVWF  50
0428:  BTFSS  53.7
0429:  GOTO   437
042A:  DECF   55,F
042B:  BSF    55.5
042C:  COMF   50,F
042D:  COMF   51,F
042E:  COMF   52,F
042F:  COMF   53,F
0430:  INCF   50,F
0431:  BTFSC  03.2
0432:  INCF   51,F
0433:  BTFSC  03.2
0434:  INCF   52,F
0435:  BTFSC  03.2
0436:  INCF   53,F
0437:  MOVLW  3B
0438:  MOVWF  5C
0439:  MOVLW  9A
043A:  MOVWF  5B
043B:  MOVLW  CA
043C:  MOVWF  5A
043D:  CLRF   59
043E:  MOVLW  0A
043F:  MOVWF  57
0440:  MOVF   54,W
0441:  BTFSC  03.2
0442:  INCF   55,F
0443:  BSF    03.1
0444:  MOVLW  50
0445:  MOVWF  04
0446:  BCF    03.7
0447:  MOVF   53,W
0448:  MOVWF  60
0449:  MOVF   52,W
044A:  MOVWF  5F
044B:  MOVF   51,W
044C:  MOVWF  5E
044D:  MOVF   50,W
044E:  MOVWF  5D
044F:  MOVF   5C,W
0450:  MOVWF  64
0451:  MOVF   5B,W
0452:  MOVWF  63
0453:  MOVF   5A,W
0454:  MOVWF  62
0455:  MOVF   59,W
0456:  MOVWF  61
0457:  CALL   319
0458:  MOVF   78,W
0459:  MOVF   77,F
045A:  BTFSS  03.2
045B:  GOTO   46F
045C:  INCF   54,W
045D:  SUBWF  57,W
045E:  BTFSC  03.2
045F:  GOTO   46F
0460:  MOVF   55,W
0461:  BTFSC  03.2
0462:  GOTO   471
0463:  ANDLW  0F
0464:  SUBWF  57,W
0465:  BTFSC  03.2
0466:  GOTO   469
0467:  BTFSC  03.0
0468:  GOTO   4A1
0469:  BTFSC  55.7
046A:  GOTO   4A1
046B:  BTFSC  55.6
046C:  GOTO   471
046D:  MOVLW  20
046E:  GOTO   49D
046F:  MOVLW  20
0470:  ANDWF  55,F
0471:  BTFSS  55.5
0472:  GOTO   47F
0473:  BCF    55.5
0474:  MOVF   54,W
0475:  BTFSS  03.2
0476:  DECF   55,F
0477:  MOVF   77,W
0478:  MOVWF  55
0479:  MOVLW  2D
047A:  MOVWF  5D
047B:  CALL   135
047C:  MOVF   55,W
047D:  MOVWF  77
047E:  CLRF   55
047F:  MOVF   54,W
0480:  SUBWF  57,W
0481:  BTFSS  03.2
0482:  GOTO   48D
0483:  MOVF   77,W
0484:  MOVWF  55
0485:  MOVLW  2E
0486:  MOVWF  5D
0487:  CALL   135
0488:  MOVF   55,W
0489:  MOVWF  77
048A:  MOVLW  20
048B:  ANDWF  55,F
048C:  MOVLW  00
048D:  MOVLW  30
048E:  BTFSS  55.5
048F:  GOTO   49D
0490:  BCF    55.5
0491:  MOVF   54,W
0492:  BTFSS  03.2
0493:  DECF   55,F
0494:  MOVF   77,W
0495:  MOVWF  55
0496:  MOVLW  2D
0497:  MOVWF  5D
0498:  CALL   135
0499:  MOVF   55,W
049A:  MOVWF  77
049B:  CLRF   55
049C:  MOVLW  30
049D:  ADDWF  77,F
049E:  MOVF   77,W
049F:  MOVWF  5D
04A0:  CALL   135
04A1:  BCF    03.1
04A2:  MOVF   5C,W
04A3:  MOVWF  60
04A4:  MOVF   5B,W
04A5:  MOVWF  5F
04A6:  MOVF   5A,W
04A7:  MOVWF  5E
04A8:  MOVF   59,W
04A9:  MOVWF  5D
04AA:  CLRF   64
04AB:  CLRF   63
04AC:  CLRF   62
04AD:  MOVLW  0A
04AE:  MOVWF  61
04AF:  CALL   319
04B0:  MOVF   7A,W
04B1:  MOVWF  5C
04B2:  MOVF   79,W
04B3:  MOVWF  5B
04B4:  MOVF   78,W
04B5:  MOVWF  5A
04B6:  MOVF   77,W
04B7:  MOVWF  59
04B8:  DECFSZ 57,F
04B9:  GOTO   443
04BA:  BCF    0A.3
04BB:  BCF    0A.4
04BC:  GOTO   53A (RETURN)
....................  
.................... #list 
....................  
.................... /**************KHAI BAO CAU HINH FUSE BIT************/ 
.................... /////////////////////////////////////////////////////// 
.................... //                                                   // 
.................... // Voi moi muc phai chon mot trong danh sach dua ra  // 
.................... //                                                   // 
.................... /////////////////////////////////////////////////////// 
....................  
.................... //_________________POINTER AND ADC____________________ 
....................  
.................... #device *=16 adc=10          //   su dung con tro 16 bit, bo chuyen doi ADC 10 bit 
.................... //#device *=16 adc=8          //  su dung con tro 16 bit, bo chuyen doi ADC 8 bit 
....................  
.................... //__________________WATCH DOG TIMER___________________ 
....................  
.................... #FUSES NOWDT                   //   khong su dung bo Watch Dog Timer 
....................  
.................... //__________________HIGH SPEED OSC____________________ 
....................  
.................... //#FUSES LP                        // Su dung nguon dao dong tan so thap < 200 khz 
.................... //#FUSES XT                        // Dao dong thach anh <= 4mhz voi PCM/PCH , 3mhz to 10 mhz voi PCD 
.................... //#FUSES RC                        // Dao dong RC voi CLKOUT 
.................... #FUSES HS                      //Dao dong tan so cao (> 4mhz voi PCM/PCH) (>10mhz voi PCD) 
....................  
.................... //__________________POWER UP TIMER____________________ 
....................  
.................... #FUSES NOPUT                    //Khong su dung Power Up Timer 
.................... //#FUSES PUT                        //Su dung Power Up Timer 
.................... //__________________BROWN OUT_________________________ 
....................  
.................... #FUSES NOBROWNOUT               //Khong reset chip khi BrownOut 
.................... //#FUSES BROWNOUT                   //Reset chi khi co BrownOut 
.................... //______________LOW VOLTAGE PROGRAM___________________ 
....................  
.................... #FUSES NOLVP                    //No low voltage programing, B3(PIC16) or B5(PIC18) used for I/O 
.................... //#FUSES LVP                        //Low Voltage Programming on B3(PIC16) or B5(PIC18) 
.................... //______________CODE PROTECED EEPROM__________________ 
....................  
.................... #FUSES NOCPD                    //Khong bao ve du lieu EEPROM 
.................... //#FUSES CPD                        //Dung che do bao ve du lieu EEPROM 
....................  
.................... //_____________PROGRAM WRITE PROTECED_________________ 
....................  
.................... //#FUSES WRT                      //Program Memory Write Protected 
.................... //#FUSES WRT_50%                  //Lower half of Program Memory is Write Protected 
.................... //#FUSES WRT_5%                   //Lower 255 bytes of Program Memory is Write Protected 
.................... #FUSES NOWRT                    //Program memory not write protected 
....................  
.................... //_____________ENABLE DEBUG MODE FOR ICD______________ 
....................  
.................... //#device ICD=TRUE            // Kich hoat chuc nang DEBUG ICD Integrated Chip Debugging 
.................... //________________DEBUG FOR ICD_______________________ 
....................  
.................... #FUSES NODEBUG                  //Khong su dung che do Debug voi ICD 
.................... //#FUSES DEBUG                      // Su dung che do Debug voi ICD 
....................  
.................... //___________CODE PROTECED FROM READING_______________ 
.................... #FUSES NOPROTECT                // Cho phep doc lai Code 
.................... //#FUSES PROTECT                    // Khong cho phep doc lai code  
....................  
.................... //___________________CLOCK____________________________ 
....................  
.................... #use delay(clock=24000000)            // Su dung tan so 24Mhz, khong reset watch dog khi goi den ham delay. 
*
00D5:  MOVLW  53
00D6:  MOVWF  04
00D7:  BCF    03.7
00D8:  MOVF   00,W
00D9:  BTFSC  03.2
00DA:  GOTO   0E9
00DB:  MOVLW  07
00DC:  MOVWF  78
00DD:  CLRF   77
00DE:  DECFSZ 77,F
00DF:  GOTO   0DE
00E0:  DECFSZ 78,F
00E1:  GOTO   0DD
00E2:  MOVLW  C7
00E3:  MOVWF  77
00E4:  DECFSZ 77,F
00E5:  GOTO   0E4
00E6:  NOP
00E7:  DECFSZ 00,F
00E8:  GOTO   0DB
00E9:  RETURN
.................... //#use delay(clock=20000000,RESTART_WDT)   // Su dung tan so 20Mhz, reset watch dog khi goi den ham delay. 
....................  
.................... //________________FAST_STANDAR I/O PORTA___________________ 
....................  
.................... //#use FAST_IO(A)          // Thiet lap che do fast I/O cho PORTA, yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se chi su dung 1 chu ky lenh 
.................... #use STANDARD_IO(A)     // Thiet lap che do chuan I/O cho PORTA, khong yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se su dung 3-4 chu ky lenh 
.................... //#use FIXED_IO(A)       // 
....................  
.................... //________________FAST_STANDAR I/O PORTB___________________ 
....................  
.................... //#use FAST_IO(B)          // Thiet lap che do fast I/O cho PORTB, yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se chi su dung 1 chu ky lenh 
.................... #use STANDARD_IO(B)     // Thiet lap che do chuan I/O cho PORTB, khong yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se su dung 3-4 chu ky lenh 
.................... //#use FIXED_IO(B)       // 
....................  
.................... //________________FAST_STANDAR I/O PORTC____________________ 
....................  
.................... #use FAST_IO(C)          // Thiet lap che do fast I/O cho PORTC, yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se chi su dung 1 chu ky lenh 
.................... //#use STANDARD_IO(C)     // Thiet lap che do chuan I/O cho PORTC, khong yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se su dung 3-4 chu ky lenh 
.................... //#use FIXED_IO(C)       // 
....................  
.................... //________________FAST_STANDAR I/O PORTD_____________________ 
....................  
.................... #use FAST_IO(D)          // Thiet lap che do fast I/O cho PORTD, yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se chi su dung 1 chu ky lenh 
.................... //#use STANDARD_IO(D)     // Thiet lap che do chuan I/O cho PORTD, khong yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se su dung 3-4 chu ky lenh 
.................... //#use FIXED_IO(D)       // 
....................  
.................... //_______________FAST_STANDAR I/O PORTE___________________ 
....................  
.................... #use FAST_IO(E)        // Thiet lap che do fast I/O cho PORTE, yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se chi su dung 1 chu ky lenh 
.................... //#use STANDARD_IO(E)     // Thiet lap che do chuan I/O cho PORTE, khong yeu cau phai chi ro huong Vao/Ra  
....................                          // cho cac chan I/O. cac ham Input,Output se su dung 3-4 chu ky lenh 
.................... //#use FIXED_IO(E)       // 
....................  
....................  
.................... //________________________CASE_____________________________ 
....................  
....................  
.................... #CASE               // Phan biet chu hoa va chu thuong trong khi lap trinh code 
....................  
....................  
.................... /************** DINH NGHIA CAC CHAN I/O ************/ 
....................  
.................... //////////////////////////////////////////////////////// 
.................... //   Xoa chu thich cho cac chuc nang I/O su dung       // 
.................... //  Dinh nghia lai cac chan cho phu hop voi phan cung //  
.................... //////////////////////////////////////////////////////// 
....................  
.................... //______________________I/O LCD____________________________ 
.................... #define LCD_RS PIN_E0                         
.................... #define LCD_RW PIN_E1 
.................... #define LCD_EN PIN_E2 
.................... #define LCD_D4 PIN_D4                  
.................... #define LCD_D5 PIN_D5 
.................... #define LCD_D6 PIN_D6 
.................... #define LCD_D7 PIN_D7  
.................... #endif 
....................  
.................... #include <var.h> 
.................... #ifndef _VAR_ 
.................... #define _VAR_ 
.................... int1 enable_display=0; 
.................... unsigned int16 Cu_Value=0; 
.................... unsigned int32 Count_Buffer=0; 
.................... unsigned int32 Value_Count=0; 
.................... #endif                                           
....................  
.................... #include "lcd.c" 
.................... /** 
....................   ****************************************************************************** 
....................   * Ten Tep      :        lcd_16x2.c 
....................   * Tac Gia      :        Nguyen Quy Nhat 
....................   * Cong Ty      :         MinhHaGroup 
....................   * Website    :         BanLinhKien.Vn 
....................   * Phien Ban   :         V1.0.0 
....................   * Ngay         :       31-07-2012 
....................   * Tom Tat   :     Dinh nghia cac ham dieu khien LCD 16x2. 
....................   *            
....................   * 
....................   ****************************************************************************** 
....................   * Chu Y      : 
....................   *                       
....................   ****************************************************************************** 
....................   */ 
.................... //Tao Xung 
....................  void LCD_Enable(void) 
.................... { 
....................  output_high(LCD_EN); 
00EA:  BSF    09.2
....................  delay_us(3); 
00EB:  MOVLW  05
00EC:  MOVWF  77
00ED:  DECFSZ 77,F
00EE:  GOTO   0ED
00EF:  GOTO   0F0
....................  output_low(LCD_EN); 
00F0:  BCF    09.2
....................  delay_us(50);  
00F1:  MOVLW  63
00F2:  MOVWF  77
00F3:  DECFSZ 77,F
00F4:  GOTO   0F3
00F5:  GOTO   0F6
00F6:  RETURN
.................... } 
.................... //Ham Gui 4 Bit Du Lieu Ra LCD 
....................  void LCD_Send4Bit( unsigned char Data ) 
.................... { 
....................  output_bit(LCD_D4,Data&0x01); 
*
00AE:  BTFSC  56.0
00AF:  GOTO   0B2
00B0:  BCF    08.4
00B1:  GOTO   0B3
00B2:  BSF    08.4
....................  output_bit(LCD_D5,(Data>>1)&1); 
00B3:  BCF    03.0
00B4:  RRF    56,W
00B5:  ANDLW  01
00B6:  BTFSS  03.2
00B7:  GOTO   0BA
00B8:  BCF    08.5
00B9:  GOTO   0BB
00BA:  BSF    08.5
....................  output_bit(LCD_D6,(Data>>2)&1); 
00BB:  RRF    56,W
00BC:  MOVWF  77
00BD:  RRF    77,F
00BE:  MOVLW  3F
00BF:  ANDWF  77,F
00C0:  MOVF   77,W
00C1:  ANDLW  01
00C2:  BTFSS  03.2
00C3:  GOTO   0C6
00C4:  BCF    08.6
00C5:  GOTO   0C7
00C6:  BSF    08.6
....................  output_bit(LCD_D7,(Data>>3)&1); 
00C7:  RRF    56,W
00C8:  MOVWF  77
00C9:  RRF    77,F
00CA:  RRF    77,F
00CB:  MOVLW  1F
00CC:  ANDWF  77,F
00CD:  MOVF   77,W
00CE:  ANDLW  01
00CF:  BTFSS  03.2
00D0:  GOTO   0D3
00D1:  BCF    08.7
00D2:  GOTO   0D4
00D3:  BSF    08.7
00D4:  RETURN
.................... } 
.................... // Ham Gui 1 Lenh Cho LCD 
....................  void LCD_SendCommand (unsigned char command ) 
.................... { 
.................... LCD_Send4Bit  ( command >>4 );/* Gui 4 bit cao */ 
*
00F7:  SWAPF  54,W
00F8:  MOVWF  55
00F9:  MOVLW  0F
00FA:  ANDWF  55,F
00FB:  MOVF   55,W
00FC:  MOVWF  56
00FD:  CALL   0AE
.................... LCD_Enable () ; 
00FE:  CALL   0EA
.................... LCD_Send4Bit  ( command  );      /* Gui 4 bit thap*/ 
00FF:  MOVF   54,W
0100:  MOVWF  56
0101:  CALL   0AE
.................... LCD_Enable () ; 
0102:  CALL   0EA
0103:  RETURN
.................... } 
.................... // Ham Khoi Tao LCD 
....................  void LCD_Init ( void ) 
.................... { 
.................... output_drive(LCD_D4); 
0104:  BSF    03.5
0105:  BCF    08.4
.................... output_drive(LCD_D5); 
0106:  BCF    08.5
.................... output_drive(LCD_D6); 
0107:  BCF    08.6
.................... output_drive(LCD_D7); 
0108:  BCF    08.7
.................... output_drive(LCD_EN); 
0109:  BCF    09.2
.................... output_drive(LCD_RS); 
010A:  BCF    09.0
.................... output_drive(LCD_RW); 
010B:  BCF    09.1
.................... LCD_Send4Bit(0x00); 
010C:  BCF    03.5
010D:  CLRF   56
010E:  CALL   0AE
.................... delay_ms(20); 
010F:  MOVLW  14
0110:  MOVWF  53
0111:  CALL   0D5
.................... output_low(LCD_RS); 
0112:  BCF    09.0
.................... output_low(LCD_RW); 
0113:  BCF    09.1
.................... LCD_Send4Bit(0x03); 
0114:  MOVLW  03
0115:  MOVWF  56
0116:  CALL   0AE
.................... LCD_Enable(); 
0117:  CALL   0EA
.................... delay_ms(5); 
0118:  MOVLW  05
0119:  MOVWF  53
011A:  CALL   0D5
.................... LCD_Enable(); 
011B:  CALL   0EA
.................... delay_us(100); 
011C:  MOVLW  C7
011D:  MOVWF  77
011E:  DECFSZ 77,F
011F:  GOTO   11E
0120:  GOTO   121
.................... LCD_Enable(); 
0121:  CALL   0EA
.................... LCD_Send4Bit(0x02); 
0122:  MOVLW  02
0123:  MOVWF  56
0124:  CALL   0AE
.................... LCD_Enable(); 
0125:  CALL   0EA
.................... LCD_SendCommand( 0x28 );      // giao thuc 4 bit, hien thi 2 hang, ki tu 5x8 
0126:  MOVLW  28
0127:  MOVWF  54
0128:  CALL   0F7
.................... LCD_SendCommand( 0x0c);    // cho phep hien thi man hinh 
0129:  MOVLW  0C
012A:  MOVWF  54
012B:  CALL   0F7
.................... LCD_SendCommand( 0x06 );      // tang ID, khong dich khung hinh 
012C:  MOVLW  06
012D:  MOVWF  54
012E:  CALL   0F7
.................... LCD_SendCommand( 0x01 ); // xoa toan bo khung hinh 
012F:  MOVLW  01
0130:  MOVWF  54
0131:  CALL   0F7
0132:  BCF    0A.3
0133:  BCF    0A.4
0134:  GOTO   4D7 (RETURN)
.................... } 
.................... void LCD_Gotoxy(unsigned char x, unsigned char y) 
.................... { 
....................   unsigned char address; 
....................   if(!y) 
*
02AA:  MOVF   51,F
02AB:  BTFSS  03.2
02AC:  GOTO   2B1
....................   address = (0x80+x); 
02AD:  MOVLW  80
02AE:  ADDWF  50,W
02AF:  MOVWF  52
02B0:  GOTO   2B4
....................   else 
....................   address = (0xC0+x); 
02B1:  MOVLW  C0
02B2:  ADDWF  50,W
02B3:  MOVWF  52
....................   delay_ms(1); 
02B4:  MOVLW  01
02B5:  MOVWF  53
02B6:  CALL   0D5
....................   LCD_SendCommand(address); 
02B7:  MOVF   52,W
02B8:  MOVWF  54
02B9:  CALL   0F7
....................   delay_ms(1); 
02BA:  MOVLW  01
02BB:  MOVWF  53
02BC:  CALL   0D5
02BD:  BCF    0A.3
02BE:  BCF    0A.4
02BF:  GOTO   520 (RETURN)
.................... } 
.................... // Ham Xoa Man Hinh LCD 
.................... void LCD_Clear() 
.................... { 
....................   LCD_SendCommand(0x01);   
....................   delay_ms(10); 
.................... } 
.................... // Ham Gui 1 Ki Tu Len LCD 
....................  void LCD_PutChar ( unsigned char Data ) 
.................... { 
....................  output_high(LCD_RS); 
*
01AF:  BSF    09.0
....................  LCD_SendCommand( Data ); 
01B0:  MOVF   53,W
01B1:  MOVWF  54
01B2:  CALL   0F7
....................  output_low(LCD_RS); 
01B3:  BCF    09.0
.................... } 
.................... void LCD_Puts (char *s) 
.................... { 
....................    while (*s) 
*
019A:  MOVF   51,W
019B:  MOVWF  7A
019C:  MOVF   50,W
019D:  MOVWF  04
019E:  BCF    03.7
019F:  BTFSC  7A.0
01A0:  BSF    03.7
01A1:  MOVF   00,F
01A2:  BTFSC  03.2
01A3:  GOTO   1B8
....................    { 
....................       LCD_PutChar(*s); 
01A4:  MOVF   51,W
01A5:  MOVWF  7A
01A6:  MOVF   50,W
01A7:  MOVWF  04
01A8:  BCF    03.7
01A9:  BTFSC  7A.0
01AA:  BSF    03.7
01AB:  MOVF   00,W
01AC:  MOVWF  52
01AD:  MOVF   52,W
01AE:  MOVWF  53
....................       s++; 
*
01B4:  INCF   50,F
01B5:  BTFSC  03.2
01B6:  INCF   51,F
01B7:  GOTO   19A
....................    } 
01B8:  RETURN
.................... } 
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
.................... #include "timer.c" 
.................... #ifndef __TIMER_ 
.................... #define __TIMER_ 
.................... void timer0_config() 
.................... { 
.................... ////////////////////////////////////////////////////////////// 
.................... //              Cau Hinh Timer 0                     // 
.................... //         T_tm0: Chu ky xung dem cua timer 0            // 
.................... //         T_osc: Chu ky dao dong su dung cho chip         // 
.................... ////////////////////////////////////////////////////////////// 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit);      //   T_tm0=T_osc*4*1 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2|RTCC_8_bit);      //   T_tm0=T_osc*4*2 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4|RTCC_8_bit);      //   T_tm0=T_osc*4*4 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8|RTCC_8_bit);      //   T_tm0=T_osc*4*8 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_16|RTCC_8_bit);      //   T_tm0=T_osc*4*16 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_32|RTCC_8_bit);      //   T_tm0=T_osc*4*32 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64|RTCC_8_bit);      //   T_tm0=T_osc*4*64 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128|RTCC_8_bit);      //   T_tm0=T_osc*4*128 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256|RTCC_8_bit);      //   T_tm0=T_osc*4*256 
.................... ///setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_1|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 1 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_2|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 2 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_4|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 4 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_8|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 8 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_16|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 16 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_32|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 32 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_64|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 64 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_128|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 128 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_256|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 256 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_1|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 1 suon xuong tai chan PIN_A4 (T0CKI)    
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_2|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 2 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_4|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 4 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_8|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 8 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_16|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 16 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_32|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 32 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_64|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 64 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_128|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 128 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_256|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 256 suon xuong tai chan PIN_A4 (T0CKI) 
....................  
.................... /******************Thiet lap ngat timer*********************/ 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //                   NGAT TRAN TIMER 0            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //enable_interrupts(INT_TIMER0);   //Cho phep ngat tran timer0 hoat dong 
.................... //disable_interrupts(INT_TIMER0);   //Khong cho phep ngat tran timer0 hoat dong (mac dinh) 
....................  
.................... } 
.................... void timer1_config() 
.................... { 
.................... setup_timer_1(T1_INTERNAL|T1_DIV_BY_1);               // 
01B9:  MOVLW  85
01BA:  MOVWF  10
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_2);               // 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_4);               // 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_DIV_BY_1);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_CLK_OUT);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_EXTERNAL_SYNC);            // 
.................... //setup_timer_1(T1_EXTERNAL|T1_CLK_OUT|T1_EXTERNAL_SYNC);   // 
.................... //setup_timer_1(T1_DISABLED);                           // 
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT TRAN TIMER 1            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... enable_interrupts(INT_TIMER1);   //Cho phep ngat tran timer1 hoat dong 
01BB:  BSF    03.5
01BC:  BSF    0C.0
01BD:  BCF    03.5
01BE:  BCF    0A.3
01BF:  BCF    0A.4
01C0:  GOTO   4F0 (RETURN)
.................... //disable_interrupts(INT_TIMER1);   //Khong cho phep ngat tran timer1 hoat dong (mac dinh) 
....................  
.................... } 
.................... void timer2_config() 
.................... { 
.................... //############################################################ 
.................... //              Cau Hinh Timer 2                     // 
.................... //         Over_Period: 1-255                        // 
.................... //         Int_Period : 1-16                        // 
.................... //         T_Ov   :Chu ky tran bo dem timer2            // 
.................... //         T_In   :Chu ky xay ra ngat tran timer 0      // 
.................... //         T_osc   : Chu ky dao dong su dung cho chip      // 
.................... //############################################################ 
....................  
.................... //setup_timer_2(T2_DIV_BY_1,Over_Period,Int_Period);      //   T_ov=T_osc*4*1*(1+Over_Period)   ;   T_In=T_osc*4*1*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DIV_BY_4,Over_Period,Int_Period);      //   T_ov=T_osc*4*4*(1+Over_Period)   ;   T_In=T_osc*4*4*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DIV_BY_16,Over_Period,Int_Period);      //   T_ov=T_osc*4*16*(1+Over_Period)   ;   T_In=T_osc*4*16*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DISABLED,0,1);                      //   Khong su dung bo dem timer2 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT TRAN TIMER 2            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_TIMER2);   //Cho phep ngat tran timer2 hoat dong 
.................... disable_interrupts(INT_TIMER2);   //Khong cho phep ngat tran timer2 hoat dong (mac dinh) 
.................... } 
.................... #endif 
....................  
.................... #int_CCP2 
.................... void  ngat_CCP2(void)  
.................... {   
....................    Value_Count = Count_Buffer+CCP_2-Cu_Value; 
*
005A:  MOVF   1B,W
005B:  ADDWF  2E,W
005C:  MOVWF  6A
005D:  MOVF   2F,W
005E:  MOVWF  6B
005F:  MOVF   1C,W
0060:  BTFSC  03.0
0061:  INCFSZ 1C,W
0062:  ADDWF  6B,F
0063:  MOVF   30,W
0064:  MOVWF  6C
0065:  MOVLW  00
0066:  BTFSC  03.0
0067:  MOVLW  01
0068:  ADDWF  6C,F
0069:  MOVF   31,W
006A:  MOVWF  6D
006B:  MOVLW  00
006C:  BTFSC  03.0
006D:  MOVLW  01
006E:  ADDWF  6D,F
006F:  MOVF   2C,W
0070:  SUBWF  6A,W
0071:  MOVWF  32
0072:  MOVF   6B,W
0073:  MOVWF  33
0074:  MOVF   2D,W
0075:  BTFSS  03.0
0076:  INCFSZ 2D,W
0077:  SUBWF  33,F
0078:  MOVF   6C,W
0079:  MOVWF  34
007A:  MOVLW  00
007B:  BTFSS  03.0
007C:  MOVLW  01
007D:  SUBWF  34,F
007E:  MOVF   6D,W
007F:  MOVWF  35
0080:  MOVLW  00
0081:  BTFSS  03.0
0082:  MOVLW  01
0083:  SUBWF  35,F
....................    Cu_Value    = CCP_2; 
0084:  MOVF   1C,W
0085:  MOVWF  2D
0086:  MOVF   1B,W
0087:  MOVWF  2C
....................    Count_Buffer=0; 
0088:  CLRF   31
0089:  CLRF   30
008A:  CLRF   2F
008B:  CLRF   2E
.................... } 
008C:  BCF    0D.0
008D:  BCF    0A.3
008E:  BCF    0A.4
008F:  GOTO   033
.................... #INT_TIMER1            
.................... void  ngat_timer1(void)  
.................... { 
....................    Count_Buffer+=0xffff;    
0090:  MOVLW  FF
0091:  ADDWF  2E,F
0092:  BTFSS  03.0
0093:  ADDWF  2F,F
0094:  MOVLW  00
0095:  BTFSC  03.0
0096:  MOVLW  01
0097:  ADDWF  30,F
0098:  MOVLW  00
0099:  BTFSC  03.0
009A:  MOVLW  01
009B:  ADDWF  31,F
009C:  BCF    0C.0
009D:  BCF    0A.3
009E:  BCF    0A.4
009F:  GOTO   033
.................... } 
.................... void main() 
*
04BD:  MOVF   03,W
04BE:  ANDLW  1F
04BF:  MOVWF  03
04C0:  BCF    2B.0
04C1:  CLRF   2D
04C2:  CLRF   2C
04C3:  CLRF   31
04C4:  CLRF   30
04C5:  CLRF   2F
04C6:  CLRF   2E
04C7:  CLRF   35
04C8:  CLRF   34
04C9:  CLRF   33
04CA:  CLRF   32
04CB:  CLRF   37
04CC:  CLRF   36
04CD:  BSF    03.5
04CE:  BSF    1F.0
04CF:  BSF    1F.1
04D0:  BSF    1F.2
04D1:  BCF    1F.3
04D2:  MOVLW  07
04D3:  MOVWF  1C
04D4:  BCF    03.7
.................... {   
....................    unsigned char str[20]; 
....................    float tan_so; 
....................    LCD_Init(); 
04D5:  BCF    03.5
04D6:  GOTO   104
....................    sprintf(str,"INPUT CAPTURE"); 
04D7:  CLRF   37
04D8:  MOVLW  38
04D9:  MOVWF  36
04DA:  MOVLW  A0
04DB:  BSF    03.6
04DC:  MOVWF  0D
04DD:  MOVLW  00
04DE:  MOVWF  0F
04DF:  BCF    03.6
04E0:  GOTO   142
....................    delay_ms(10); 
04E1:  MOVLW  0A
04E2:  MOVWF  53
04E3:  CALL   0D5
....................    LCD_Puts(str); 
04E4:  CLRF   51
04E5:  MOVLW  38
04E6:  MOVWF  50
04E7:  CALL   19A
....................    delay_ms(1000); 
04E8:  MOVLW  04
04E9:  MOVWF  50
04EA:  MOVLW  FA
04EB:  MOVWF  53
04EC:  CALL   0D5
04ED:  DECFSZ 50,F
04EE:  GOTO   4EA
....................    timer1_config(); 
04EF:  GOTO   1B9
....................    set_timer1(0); 
04F0:  CLRF   0E
04F1:  CLRF   0F
04F2:  CLRF   0E
....................    enable_interrupts(GLOBAL);  
04F3:  MOVLW  C0
04F4:  IORWF  0B,F
....................    enable_interrupts(INT_CCP2); 
04F5:  BSF    03.5
04F6:  BSF    0D.0
....................    setup_ccp2(CCP_CAPTURE_FE); 
04F7:  BCF    03.5
04F8:  CLRF   1D
04F9:  MOVLW  04
04FA:  MOVWF  1D
....................    while(TRUE) 
....................    { 
....................       tan_so=6000000/((float)(Value_Count)); 
04FB:  MOVF   35,W
04FC:  MOVWF  53
04FD:  MOVF   34,W
04FE:  MOVWF  52
04FF:  MOVF   33,W
0500:  MOVWF  51
0501:  MOVF   32,W
0502:  MOVWF  50
0503:  GOTO   1C1
0504:  CLRF   53
0505:  MOVLW  1B
0506:  MOVWF  52
0507:  MOVLW  37
0508:  MOVWF  51
0509:  MOVLW  95
050A:  MOVWF  50
050B:  MOVF   7A,W
050C:  MOVWF  57
050D:  MOVF   79,W
050E:  MOVWF  56
050F:  MOVF   78,W
0510:  MOVWF  55
0511:  MOVF   77,W
0512:  MOVWF  54
0513:  GOTO   1DE
0514:  MOVF   7A,W
0515:  MOVWF  4F
0516:  MOVF   79,W
0517:  MOVWF  4E
0518:  MOVF   78,W
0519:  MOVWF  4D
051A:  MOVF   77,W
051B:  MOVWF  4C
....................       LCD_Gotoxy(0,1); 
051C:  CLRF   50
051D:  MOVLW  01
051E:  MOVWF  51
051F:  GOTO   2AA
....................       sprintf(str,"Tan So= %6.1f",tan_so); 
0520:  CLRF   37
0521:  MOVLW  38
0522:  MOVWF  36
0523:  MOVLW  A7
0524:  BSF    03.6
0525:  MOVWF  0D
0526:  MOVLW  00
0527:  MOVWF  0F
0528:  BCF    03.0
0529:  MOVLW  08
052A:  BCF    03.6
052B:  MOVWF  50
052C:  GOTO   2C0
052D:  MOVLW  05
052E:  MOVWF  04
052F:  MOVF   4F,W
0530:  MOVWF  53
0531:  MOVF   4E,W
0532:  MOVWF  52
0533:  MOVF   4D,W
0534:  MOVWF  51
0535:  MOVF   4C,W
0536:  MOVWF  50
0537:  MOVLW  01
0538:  MOVWF  54
0539:  GOTO   368
....................       LCD_Puts(str); 
053A:  CLRF   51
053B:  MOVLW  38
053C:  MOVWF  50
053D:  CALL   19A
053E:  GOTO   4FB
....................    } 
.................... }                 
....................  
053F:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
