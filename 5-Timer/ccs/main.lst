CCS PCM C Compiler, Version 5.015, 5967               23-Apr-22 21:54

               Filename:   D:\STUDY\PIC\5-Timer\ccs\main.lst

               ROM used:   880 words (11%)
                           Largest free fragment is 2048
               RAM used:   42 (11%) at main() level
                           49 (13%) worst case
               Stack used: 4 locations (3 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   328
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  BTFSS  0B.5
0028:  GOTO   02B
0029:  BTFSC  0B.2
002A:  GOTO   09C
002B:  BTFSS  0B.3
002C:  GOTO   02F
002D:  BTFSC  0B.0
002E:  GOTO   09F
002F:  BTFSS  0B.4
0030:  GOTO   033
0031:  BTFSC  0B.1
0032:  GOTO   0A2
0033:  MOVLW  8C
0034:  MOVWF  04
0035:  BTFSS  00.6
0036:  GOTO   039
0037:  BTFSC  0C.6
0038:  GOTO   0A5
0039:  MOVLW  8C
003A:  MOVWF  04
003B:  BTFSS  00.4
003C:  GOTO   03F
003D:  BTFSC  0C.4
003E:  GOTO   0A8
003F:  MOVLW  8C
0040:  MOVWF  04
0041:  BTFSS  00.5
0042:  GOTO   045
0043:  BTFSC  0C.5
0044:  GOTO   0AB
0045:  MOVLW  8C
0046:  MOVWF  04
0047:  BTFSS  00.0
0048:  GOTO   04B
0049:  BTFSC  0C.0
004A:  GOTO   0AE
004B:  MOVLW  8C
004C:  MOVWF  04
004D:  BTFSS  00.1
004E:  GOTO   051
004F:  BTFSC  0C.1
0050:  GOTO   0B1
0051:  MOVLW  8C
0052:  MOVWF  04
0053:  BTFSS  00.2
0054:  GOTO   057
0055:  BTFSC  0C.2
0056:  GOTO   0B4
0057:  MOVLW  8D
0058:  MOVWF  04
0059:  BTFSS  00.0
005A:  GOTO   05D
005B:  BTFSC  0D.0
005C:  GOTO   0B7
005D:  MOVLW  8C
005E:  MOVWF  04
005F:  BTFSS  00.3
0060:  GOTO   063
0061:  BTFSC  0C.3
0062:  GOTO   0BA
0063:  MOVLW  8C
0064:  MOVWF  04
0065:  BTFSS  00.7
0066:  GOTO   069
0067:  BTFSC  0C.7
0068:  GOTO   0BD
0069:  MOVLW  8D
006A:  MOVWF  04
006B:  BTFSS  00.3
006C:  GOTO   06F
006D:  BTFSC  0D.3
006E:  GOTO   0C0
006F:  MOVLW  8D
0070:  MOVWF  04
0071:  BTFSS  00.4
0072:  GOTO   075
0073:  BTFSC  0D.4
0074:  GOTO   0C3
0075:  MOVLW  8D
0076:  MOVWF  04
0077:  BTFSS  00.6
0078:  GOTO   07B
0079:  BTFSC  0D.6
007A:  GOTO   0C6
007B:  MOVF   22,W
007C:  MOVWF  04
007D:  MOVF   23,W
007E:  MOVWF  77
007F:  MOVF   24,W
0080:  MOVWF  78
0081:  MOVF   25,W
0082:  MOVWF  79
0083:  MOVF   26,W
0084:  MOVWF  7A
0085:  MOVF   27,W
0086:  BSF    03.6
0087:  MOVWF  0D
0088:  BCF    03.6
0089:  MOVF   28,W
008A:  BSF    03.6
008B:  MOVWF  0F
008C:  BCF    03.6
008D:  MOVF   29,W
008E:  BSF    03.6
008F:  MOVWF  0C
0090:  BCF    03.6
0091:  MOVF   2A,W
0092:  BSF    03.6
0093:  MOVWF  0E
0094:  BCF    03.6
0095:  MOVF   20,W
0096:  MOVWF  0A
0097:  SWAPF  21,W
0098:  MOVWF  03
0099:  SWAPF  7F,F
009A:  SWAPF  7F,W
009B:  RETFIE
009C:  BCF    0A.3
009D:  BCF    0A.4
009E:  GOTO   0D1
009F:  BCF    0A.3
00A0:  BCF    0A.4
00A1:  GOTO   0CD
00A2:  BCF    0A.3
00A3:  BCF    0A.4
00A4:  GOTO   0C9
00A5:  BCF    0A.3
00A6:  BCF    0A.4
00A7:  GOTO   0F3
00A8:  BCF    0A.3
00A9:  BCF    0A.4
00AA:  GOTO   0FF
00AB:  BCF    0A.3
00AC:  BCF    0A.4
00AD:  GOTO   103
00AE:  BCF    0A.3
00AF:  BCF    0A.4
00B0:  GOTO   0EB
00B1:  BCF    0A.3
00B2:  BCF    0A.4
00B3:  GOTO   0EF
00B4:  BCF    0A.3
00B5:  BCF    0A.4
00B6:  GOTO   0F7
00B7:  BCF    0A.3
00B8:  BCF    0A.4
00B9:  GOTO   0FB
00BA:  BCF    0A.3
00BB:  BCF    0A.4
00BC:  GOTO   107
00BD:  BCF    0A.3
00BE:  BCF    0A.4
00BF:  GOTO   10B
00C0:  BCF    0A.3
00C1:  BCF    0A.4
00C2:  GOTO   10F
00C3:  BCF    0A.3
00C4:  BCF    0A.4
00C5:  GOTO   113
00C6:  BCF    0A.3
00C7:  BCF    0A.4
00C8:  GOTO   117
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
011B:  DATA 20,10
011C:  DATA 20,2A
011D:  DATA C5,29
011E:  DATA 54,10
011F:  DATA D4,24
0120:  DATA CD,22
0121:  DATA 52,00
0122:  DATA D4,34
0123:  DATA ED,32
0124:  DATA 72,1D
0125:  DATA A0,12
0126:  DATA B2,3A
0127:  DATA 00,00
*
01C7:  MOVF   2E,W
01C8:  MOVWF  04
01C9:  BCF    03.7
01CA:  BTFSC  2F.0
01CB:  BSF    03.7
01CC:  MOVF   48,W
01CD:  MOVWF  00
01CE:  INCF   04,F
01CF:  CLRF   00
01D0:  INCF   2E,F
01D1:  BTFSC  03.2
01D2:  INCF   2F,F
01D3:  RETURN
01D4:  MOVF   0B,W
01D5:  MOVWF  44
01D6:  BCF    0B.7
01D7:  BSF    03.5
01D8:  BSF    03.6
01D9:  BSF    0C.7
01DA:  BSF    0C.0
01DB:  NOP
01DC:  NOP
01DD:  BCF    03.5
01DE:  BCF    03.6
01DF:  BTFSC  44.7
01E0:  BSF    0B.7
01E1:  BSF    03.6
01E2:  MOVF   0C,W
01E3:  ANDLW  7F
01E4:  BTFSC  03.2
01E5:  GOTO   228
01E6:  BCF    03.6
01E7:  MOVWF  44
01E8:  BSF    03.6
01E9:  MOVF   0D,W
01EA:  BCF    03.6
01EB:  MOVWF  45
01EC:  BSF    03.6
01ED:  MOVF   0F,W
01EE:  BCF    03.6
01EF:  MOVWF  46
01F0:  MOVF   44,W
01F1:  MOVWF  48
01F2:  CALL   1C7
01F3:  MOVF   45,W
01F4:  BSF    03.6
01F5:  MOVWF  0D
01F6:  BCF    03.6
01F7:  MOVF   46,W
01F8:  BSF    03.6
01F9:  MOVWF  0F
01FA:  BCF    03.6
01FB:  MOVF   0B,W
01FC:  MOVWF  47
01FD:  BCF    0B.7
01FE:  BSF    03.5
01FF:  BSF    03.6
0200:  BSF    0C.7
0201:  BSF    0C.0
0202:  NOP
0203:  NOP
0204:  BCF    03.5
0205:  BCF    03.6
0206:  BTFSC  47.7
0207:  BSF    0B.7
0208:  BSF    03.6
0209:  RLF    0C,W
020A:  RLF    0E,W
020B:  ANDLW  7F
020C:  BTFSC  03.2
020D:  GOTO   228
020E:  BCF    03.6
020F:  MOVWF  44
0210:  BSF    03.6
0211:  MOVF   0D,W
0212:  BCF    03.6
0213:  MOVWF  45
0214:  BSF    03.6
0215:  MOVF   0F,W
0216:  BCF    03.6
0217:  MOVWF  46
0218:  MOVF   44,W
0219:  MOVWF  48
021A:  CALL   1C7
021B:  MOVF   45,W
021C:  BSF    03.6
021D:  MOVWF  0D
021E:  BCF    03.6
021F:  MOVF   46,W
0220:  BSF    03.6
0221:  MOVWF  0F
0222:  INCF   0D,F
0223:  BTFSC  03.2
0224:  INCF   0F,F
0225:  BCF    03.6
0226:  GOTO   1D4
0227:  BSF    03.6
0228:  BCF    03.6
0229:  BCF    0A.3
022A:  BCF    0A.4
022B:  GOTO   342 (RETURN)
*
0283:  MOVF   0B,W
0284:  MOVWF  45
0285:  BCF    0B.7
0286:  BSF    03.5
0287:  BSF    03.6
0288:  BSF    0C.7
0289:  BSF    0C.0
028A:  NOP
028B:  NOP
028C:  BCF    03.5
028D:  BCF    03.6
028E:  BTFSC  45.7
028F:  BSF    0B.7
0290:  BTFSC  03.0
0291:  GOTO   2BA
0292:  BSF    03.6
0293:  MOVF   0C,W
0294:  ANDLW  7F
0295:  BCF    03.6
0296:  MOVWF  45
0297:  BSF    03.6
0298:  MOVF   0D,W
0299:  BCF    03.6
029A:  MOVWF  46
029B:  BSF    03.6
029C:  MOVF   0F,W
029D:  BCF    03.6
029E:  MOVWF  47
029F:  MOVF   45,W
02A0:  MOVWF  48
02A1:  CALL   1C7
02A2:  MOVF   46,W
02A3:  BSF    03.6
02A4:  MOVWF  0D
02A5:  BCF    03.6
02A6:  MOVF   47,W
02A7:  BSF    03.6
02A8:  MOVWF  0F
02A9:  BCF    03.6
02AA:  MOVF   0B,W
02AB:  MOVWF  48
02AC:  BCF    0B.7
02AD:  BSF    03.5
02AE:  BSF    03.6
02AF:  BSF    0C.7
02B0:  BSF    0C.0
02B1:  NOP
02B2:  NOP
02B3:  BCF    03.5
02B4:  BCF    03.6
02B5:  BTFSC  48.7
02B6:  BSF    0B.7
02B7:  DECFSZ 44,F
02B8:  GOTO   2BA
02B9:  GOTO   2D9
02BA:  BSF    03.6
02BB:  RLF    0C,W
02BC:  RLF    0E,W
02BD:  ANDLW  7F
02BE:  BCF    03.6
02BF:  MOVWF  45
02C0:  BSF    03.6
02C1:  MOVF   0D,W
02C2:  BCF    03.6
02C3:  MOVWF  46
02C4:  BSF    03.6
02C5:  MOVF   0F,W
02C6:  BCF    03.6
02C7:  MOVWF  47
02C8:  MOVF   45,W
02C9:  MOVWF  48
02CA:  CALL   1C7
02CB:  MOVF   46,W
02CC:  BSF    03.6
02CD:  MOVWF  0D
02CE:  BCF    03.6
02CF:  MOVF   47,W
02D0:  BSF    03.6
02D1:  MOVWF  0F
02D2:  INCF   0D,F
02D3:  BTFSC  03.2
02D4:  INCF   0F,F
02D5:  BCF    03.0
02D6:  BCF    03.6
02D7:  DECFSZ 44,F
02D8:  GOTO   283
02D9:  BCF    0A.3
02DA:  BCF    0A.4
02DB:  GOTO   365 (RETURN)
02DC:  MOVF   47,W
02DD:  CLRF   78
02DE:  SUBWF  46,W
02DF:  BTFSC  03.0
02E0:  GOTO   2E4
02E1:  MOVF   46,W
02E2:  MOVWF  77
02E3:  GOTO   2F0
02E4:  CLRF   77
02E5:  MOVLW  08
02E6:  MOVWF  48
02E7:  RLF    46,F
02E8:  RLF    77,F
02E9:  MOVF   47,W
02EA:  SUBWF  77,W
02EB:  BTFSC  03.0
02EC:  MOVWF  77
02ED:  RLF    78,F
02EE:  DECFSZ 48,F
02EF:  GOTO   2E7
02F0:  RETURN
02F1:  MOVF   78,W
02F2:  MOVF   44,W
02F3:  MOVWF  46
02F4:  MOVLW  64
02F5:  MOVWF  47
02F6:  CALL   2DC
02F7:  MOVF   77,W
02F8:  MOVWF  44
02F9:  MOVF   78,W
02FA:  MOVLW  30
02FB:  BTFSS  03.2
02FC:  GOTO   304
02FD:  BTFSS  45.1
02FE:  GOTO   30B
02FF:  BTFSC  45.3
0300:  GOTO   30B
0301:  BTFSC  45.4
0302:  MOVLW  20
0303:  GOTO   307
0304:  BCF    45.3
0305:  BCF    45.4
0306:  BSF    45.0
0307:  ADDWF  78,F
0308:  MOVF   78,W
0309:  MOVWF  48
030A:  CALL   1C7
030B:  MOVF   44,W
030C:  MOVWF  46
030D:  MOVLW  0A
030E:  MOVWF  47
030F:  CALL   2DC
0310:  MOVF   77,W
0311:  MOVWF  44
0312:  MOVF   78,W
0313:  MOVLW  30
0314:  BTFSS  03.2
0315:  GOTO   31C
0316:  BTFSC  45.3
0317:  GOTO   320
0318:  BTFSS  45.0
0319:  GOTO   320
031A:  BTFSC  45.4
031B:  MOVLW  20
031C:  ADDWF  78,F
031D:  MOVF   78,W
031E:  MOVWF  48
031F:  CALL   1C7
0320:  MOVLW  30
0321:  ADDWF  44,F
0322:  MOVF   44,W
0323:  MOVWF  48
0324:  CALL   1C7
0325:  BCF    0A.3
0326:  BCF    0A.4
0327:  GOTO   36A (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
*
015B:  MOVLW  47
015C:  MOVWF  04
015D:  BCF    03.7
015E:  MOVF   00,W
015F:  BTFSC  03.2
0160:  GOTO   16E
0161:  MOVLW  06
0162:  MOVWF  78
0163:  CLRF   77
0164:  DECFSZ 77,F
0165:  GOTO   164
0166:  DECFSZ 78,F
0167:  GOTO   163
0168:  MOVLW  7B
0169:  MOVWF  77
016A:  DECFSZ 77,F
016B:  GOTO   16A
016C:  DECFSZ 00,F
016D:  GOTO   161
016E:  RETURN
.................... #define LCD_RS PIN_E0                         
.................... #define LCD_RW PIN_E1 
.................... #define LCD_EN PIN_E2 
.................... #define LCD_D4 PIN_D4                  
.................... #define LCD_D5 PIN_D5 
.................... #define LCD_D6 PIN_D6 
.................... #define LCD_D7 PIN_D7  
....................  
.................... #include <var.h> 
.................... #ifndef _VAR_ 
.................... #define _VAR_ 
.................... unsigned int1 enable_display=0; 
.................... unsigned int8 Count; 
.................... unsigned int8 Value; 
.................... #endif                                           
....................  
.................... #include "lcd.c" 
.................... /** 
....................   ****************************************************************************** 
....................   * Ten Tep      :        lcd_16x2.c 
....................   * Tac Gia      :        Nguyen Quy Nhat 
....................   * Cong Ty      :         MinhHaGroup 
....................   * Website      :         BanLinhKien.Vn 
....................   * Phien Ban   :         V1.0.0 
....................   * Ngay         :       31-07-2012 
....................   * Tom Tat   :     Dinh nghia cac ham dieu khien LCD 16x2. 
....................   *            
....................   * 
....................   ****************************************************************************** 
....................   * Chu Y      : 
....................   *                       
....................   ****************************************************************************** 
....................   */ 
.................... //Tao Xung 
....................  void LCD_Enable(void) 
.................... { 
....................  output_high(LCD_EN); 
016F:  BSF    03.5
0170:  BCF    09.2
0171:  BCF    03.5
0172:  BSF    09.2
....................  delay_us(3); 
0173:  MOVLW  04
0174:  MOVWF  77
0175:  DECFSZ 77,F
0176:  GOTO   175
0177:  GOTO   178
....................  output_low(LCD_EN); 
0178:  BSF    03.5
0179:  BCF    09.2
017A:  BCF    03.5
017B:  BCF    09.2
....................  delay_us(50);  
017C:  MOVLW  52
017D:  MOVWF  77
017E:  DECFSZ 77,F
017F:  GOTO   17E
0180:  GOTO   181
0181:  NOP
0182:  RETURN
.................... } 
.................... //Ham Gui 4 Bit Du Lieu Ra LCD 
....................  void LCD_Send4Bit( unsigned char Data ) 
.................... { 
....................  output_bit(LCD_D4,Data&0x01); 
*
0128:  BTFSC  4A.0
0129:  GOTO   12C
012A:  BCF    08.4
012B:  GOTO   12D
012C:  BSF    08.4
012D:  BSF    03.5
012E:  BCF    08.4
....................  output_bit(LCD_D5,(Data>>1)&1); 
012F:  BCF    03.0
0130:  BCF    03.5
0131:  RRF    4A,W
0132:  ANDLW  01
0133:  BTFSS  03.2
0134:  GOTO   137
0135:  BCF    08.5
0136:  GOTO   138
0137:  BSF    08.5
0138:  BSF    03.5
0139:  BCF    08.5
....................  output_bit(LCD_D6,(Data>>2)&1); 
013A:  BCF    03.5
013B:  RRF    4A,W
013C:  MOVWF  77
013D:  RRF    77,F
013E:  MOVLW  3F
013F:  ANDWF  77,F
0140:  MOVF   77,W
0141:  ANDLW  01
0142:  BTFSS  03.2
0143:  GOTO   146
0144:  BCF    08.6
0145:  GOTO   147
0146:  BSF    08.6
0147:  BSF    03.5
0148:  BCF    08.6
....................  output_bit(LCD_D7,(Data>>3)&1); 
0149:  BCF    03.5
014A:  RRF    4A,W
014B:  MOVWF  77
014C:  RRF    77,F
014D:  RRF    77,F
014E:  MOVLW  1F
014F:  ANDWF  77,F
0150:  MOVF   77,W
0151:  ANDLW  01
0152:  BTFSS  03.2
0153:  GOTO   156
0154:  BCF    08.7
0155:  GOTO   157
0156:  BSF    08.7
0157:  BSF    03.5
0158:  BCF    08.7
0159:  BCF    03.5
015A:  RETURN
.................... } 
.................... // Ham Gui 1 Lenh Cho LCD 
....................  void LCD_SendCommand (unsigned char command ) 
.................... { 
.................... LCD_Send4Bit  ( command >>4 );/* Gui 4 bit cao */ 
*
0183:  SWAPF  48,W
0184:  MOVWF  49
0185:  MOVLW  0F
0186:  ANDWF  49,F
0187:  MOVF   49,W
0188:  MOVWF  4A
0189:  CALL   128
.................... LCD_Enable () ; 
018A:  CALL   16F
.................... LCD_Send4Bit  ( command  );      /* Gui 4 bit thap*/ 
018B:  MOVF   48,W
018C:  MOVWF  4A
018D:  CALL   128
.................... LCD_Enable () ; 
018E:  CALL   16F
018F:  RETURN
.................... } 
.................... // Ham Khoi Tao LCD 
....................  void LCD_Init ( void ) 
.................... { 
.................... output_drive(LCD_D4); 
0190:  BSF    03.5
0191:  BCF    08.4
.................... output_drive(LCD_D5); 
0192:  BCF    08.5
.................... output_drive(LCD_D6); 
0193:  BCF    08.6
.................... output_drive(LCD_D7); 
0194:  BCF    08.7
.................... output_drive(LCD_EN); 
0195:  BCF    09.2
.................... output_drive(LCD_RS); 
0196:  BCF    09.0
.................... output_drive(LCD_RW); 
0197:  BCF    09.1
.................... LCD_Send4Bit(0x00); 
0198:  BCF    03.5
0199:  CLRF   4A
019A:  CALL   128
.................... delay_ms(20); 
019B:  MOVLW  14
019C:  MOVWF  47
019D:  CALL   15B
.................... output_low(LCD_RS); 
019E:  BSF    03.5
019F:  BCF    09.0
01A0:  BCF    03.5
01A1:  BCF    09.0
.................... output_low(LCD_RW); 
01A2:  BSF    03.5
01A3:  BCF    09.1
01A4:  BCF    03.5
01A5:  BCF    09.1
.................... LCD_Send4Bit(0x03); 
01A6:  MOVLW  03
01A7:  MOVWF  4A
01A8:  CALL   128
.................... LCD_Enable(); 
01A9:  CALL   16F
.................... delay_ms(5); 
01AA:  MOVLW  05
01AB:  MOVWF  47
01AC:  CALL   15B
.................... LCD_Enable(); 
01AD:  CALL   16F
.................... delay_us(100); 
01AE:  MOVLW  A6
01AF:  MOVWF  77
01B0:  DECFSZ 77,F
01B1:  GOTO   1B0
01B2:  NOP
.................... LCD_Enable(); 
01B3:  CALL   16F
.................... LCD_Send4Bit(0x02); 
01B4:  MOVLW  02
01B5:  MOVWF  4A
01B6:  CALL   128
.................... LCD_Enable(); 
01B7:  CALL   16F
.................... LCD_SendCommand( 0x28 );      // giao thuc 4 bit, hien thi 2 hang, ki tu 5x8 
01B8:  MOVLW  28
01B9:  MOVWF  48
01BA:  CALL   183
.................... LCD_SendCommand( 0x0c);    // cho phep hien thi man hinh 
01BB:  MOVLW  0C
01BC:  MOVWF  48
01BD:  CALL   183
.................... LCD_SendCommand( 0x06 );      // tang ID, khong dich khung hinh 
01BE:  MOVLW  06
01BF:  MOVWF  48
01C0:  CALL   183
.................... LCD_SendCommand( 0x01 ); // xoa toan bo khung hinh 
01C1:  MOVLW  01
01C2:  MOVWF  48
01C3:  CALL   183
01C4:  BCF    0A.3
01C5:  BCF    0A.4
01C6:  GOTO   338 (RETURN)
.................... } 
.................... void LCD_Gotoxy(unsigned char x, unsigned char y) 
.................... { 
....................   unsigned char address; 
....................   if(!y) 
*
026D:  MOVF   45,F
026E:  BTFSS  03.2
026F:  GOTO   274
....................   address = (0x80+x); 
0270:  MOVLW  80
0271:  ADDWF  44,W
0272:  MOVWF  46
0273:  GOTO   277
....................   else 
....................   address = (0xC0+x); 
0274:  MOVLW  C0
0275:  ADDWF  44,W
0276:  MOVWF  46
....................   delay_us(1000); 
0277:  MOVLW  01
0278:  MOVWF  47
0279:  CALL   15B
....................   LCD_SendCommand(address); 
027A:  MOVF   46,W
027B:  MOVWF  48
027C:  CALL   183
....................   delay_ms(10); 
027D:  MOVLW  0A
027E:  MOVWF  47
027F:  CALL   15B
0280:  BCF    0A.3
0281:  BCF    0A.4
0282:  GOTO   358 (RETURN)
.................... } 
.................... // Ham Xoa Man Hinh LCD 
.................... void LCD_Clear() 
.................... { 
....................   LCD_SendCommand(0x01);   
....................   delay_ms(10); 
.................... } 
.................... // Ham Gui 1 Ki Tu Len LCD 
....................  void LCD_PutChar ( unsigned char Data ) 
.................... { 
....................  output_high(LCD_RS); 
*
0241:  BSF    03.5
0242:  BCF    09.0
0243:  BCF    03.5
0244:  BSF    09.0
....................  LCD_SendCommand( Data ); 
0245:  MOVF   47,W
0246:  MOVWF  48
0247:  CALL   183
....................  output_low(LCD_RS); 
0248:  BSF    03.5
0249:  BCF    09.0
024A:  BCF    03.5
024B:  BCF    09.0
.................... } 
.................... void LCD_Puts (char *s) 
.................... { 
....................    while (*s) 
*
022C:  MOVF   45,W
022D:  MOVWF  7A
022E:  MOVF   44,W
022F:  MOVWF  04
0230:  BCF    03.7
0231:  BTFSC  7A.0
0232:  BSF    03.7
0233:  MOVF   00,F
0234:  BTFSC  03.2
0235:  GOTO   250
....................    { 
....................       LCD_PutChar(*s); 
0236:  MOVF   45,W
0237:  MOVWF  7A
0238:  MOVF   44,W
0239:  MOVWF  04
023A:  BCF    03.7
023B:  BTFSC  7A.0
023C:  BSF    03.7
023D:  MOVF   00,W
023E:  MOVWF  46
023F:  MOVF   46,W
0240:  MOVWF  47
....................       s++; 
*
024C:  INCF   44,F
024D:  BTFSC  03.2
024E:  INCF   45,F
024F:  GOTO   22C
....................    } 
0250:  RETURN
.................... } 
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
.................... #include "interrupt.c" 
.................... #ifndef __INTERRUPT_ 
.................... #define __INTERRUPT_ 
.................... void interrupt_config() 
.................... { 
.................... /***************ENABLE-DISABLE NGAT******************/ 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //                     NGAT NGOAI               // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_EXT);      //Cho phep ngat ngoai hoat dong 
.................... disable_interrupts(INT_EXT);      //Khong cho phep ngat ngoai hoat dong (mac dinh) 
0251:  BCF    0B.4
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... // NGAT KHI CO THAY DOI TRANG THAI CHAN RB4->RB7   // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_RB);      //Cho phep ngat RB hoat dong 
.................... disable_interrupts(INT_RB);      //Khong cho phep ngat RB hoat dong (mac dinh) 
0252:  BCF    0B.3
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //   NGAT KHI CO CAPTURE HOAC COMPARE O BO CCP1      // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_CCP1);   //Cho phep ngat CCP1 hoat dong 
.................... disable_interrupts(INT_CCP1);   //Khong cho phep ngat CCP1 hoat dong (mac dinh) 
0253:  BSF    03.5
0254:  BCF    0C.2
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //   NGAT KHI CO CAPTURE HOAC COMPARE O BO CCP2      // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_CCP2);   //Cho phep ngat CCP2 hoat dong 
.................... disable_interrupts(INT_CCP2);   //Khong cho phep ngat CCP2 hoat dong (mac dinh) 
0255:  BCF    0D.0
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //      NGAT KHI TRUYEN XONG DU LIEU RS232         // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_TBE);   //Cho phep ngat TBE hoat dong 
.................... disable_interrupts(INT_TBE);   //Khong cho phep ngat TBE hoat dong (mac dinh) 
0256:  BCF    0C.4
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //      NGAT KHI NHAN 1 BYTE DU LIEU RS232         // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_RDA);   //Cho phep ngat RDA hoat dong 
.................... disable_interrupts(INT_RDA);   //Khong cho phep ngat RDA hoat dong (mac dinh) 
0257:  BCF    0C.5
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT SSP                  // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_SSP);   //Cho phep ngat SSP hoat dong 
.................... disable_interrupts(INT_SSP);   //Khong cho phep ngat SSP hoat dong (mac dinh) 
0258:  BCF    0C.3
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT PSP                  // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_PSP);   //Cho phep ngat PSP hoat dong 
.................... disable_interrupts(INT_PSP);   //Khong cho phep ngat PSP hoat dong (mac dinh) 
0259:  BCF    0C.7
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT BUSCOL                  // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_BUSCOL);   //Cho phep ngat BUSCOL hoat dong 
.................... disable_interrupts(INT_BUSCOL);   //Khong cho phep ngat BUSCOL hoat dong (mac dinh) 
025A:  BCF    0D.3
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //      NGAT HOAN THANH GHI DU LIEU VAO EEPROM      // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_EEPROM);   //Cho phep ngat EEPROM hoat dong 
.................... disable_interrupts(INT_EEPROM);   //Khong cho phep ngat EEPROM hoat dong (mac dinh) 
025B:  BCF    0D.4
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT COMPARATOR               // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_COMP);   //Cho phep ngat COMPARATOR hoat dong 
.................... disable_interrupts(INT_COMP);   //Khong cho phep ngat COMPARATOR hoat dong (mac dinh) 
025C:  BCF    0D.6
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //                NGAT TOAN CUC               // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... enable_interrupts(GLOBAL);   //Cho phep cac ngat co the hoat dong 
025D:  MOVLW  C0
025E:  BCF    03.5
025F:  IORWF  0B,F
0260:  BCF    0A.3
0261:  BCF    0A.4
0262:  GOTO   351 (RETURN)
.................... //disable_interrupts(GLOBAL);   //Khong cho phep cac ngat hoat dong (mac dinh) 
.................... } 
.................... //____________________NGAT NGOAI___________________________ 
.................... #INT_EXT 
.................... void ngat_ngoai(void) 
.................... {    
....................    ; 
.................... } 
....................  
.................... //____NGAT KHI CO THAY DOI TRANG THAI CHAN RB4->RB7________ 
....................  
*
00C9:  BCF    0B.1
00CA:  BCF    0A.3
00CB:  BCF    0A.4
00CC:  GOTO   07B
.................... #INT_RB 
.................... void ngat_RB(void) 
.................... {    
....................    ; 
.................... } 
.................... //_________________NGAT TRAN TIMER 0_______________________ 
....................  
00CD:  BCF    0B.0
00CE:  BCF    0A.3
00CF:  BCF    0A.4
00D0:  GOTO   07B
.................... #INT_RTCC             
.................... void  ngat_timer0(void)  
.................... { 
....................  set_timer0(2);  
00D1:  MOVLW  02
00D2:  MOVWF  01
....................    Count++; 
00D3:  INCF   2C,F
....................    if(Count==46) 
00D4:  MOVF   2C,W
00D5:  SUBLW  2E
00D6:  BTFSS  03.2
00D7:  GOTO   0E7
....................    { 
....................    // dinh thoi 0.5s 
....................    disable_interrupts(GLOBAL);  
00D8:  BCF    0B.6
00D9:  BCF    0B.7
00DA:  BTFSC  0B.7
00DB:  GOTO   0D9
....................    Count=0;                                  
00DC:  CLRF   2C
....................    if(Value==99)Value=0;  
00DD:  MOVF   2D,W
00DE:  SUBLW  63
00DF:  BTFSS  03.2
00E0:  GOTO   0E3
00E1:  CLRF   2D
00E2:  GOTO   0E4
....................    else Value++; 
00E3:  INCF   2D,F
....................    enable_display=1; 
00E4:  BSF    2B.0
....................    enable_interrupts(GLOBAL); 
00E5:  MOVLW  C0
00E6:  IORWF  0B,F
....................    } 
.................... } 
.................... //_______________NGAT TRAN TIMER 1_________________________ 
00E7:  BCF    0B.2
00E8:  BCF    0A.3
00E9:  BCF    0A.4
00EA:  GOTO   07B
.................... #INT_TIMER1            
.................... void  ngat_timer1(void)  
.................... { 
....................     
.................... } 
.................... //______________NGAT TRAN TIMER 2__________________________ 
00EB:  BCF    0C.0
00EC:  BCF    0A.3
00ED:  BCF    0A.4
00EE:  GOTO   07B
.................... #INT_TIMER2           
.................... void  ngat_timer2(void)  
.................... { 
....................     
.................... } 
.................... //__________________NGAT HOAN THANH ADC____________________ 
....................     
00EF:  BCF    0C.1
00F0:  BCF    0A.3
00F1:  BCF    0A.4
00F2:  GOTO   07B
.................... #INT_AD           
.................... void  ngat_ADC(void)  
.................... { 
....................     
.................... } 
.................... //______NGAT KHI CO CAPTURE HOAC COMPARE O BO CCP1_________ 
00F3:  BCF    0C.6
00F4:  BCF    0A.3
00F5:  BCF    0A.4
00F6:  GOTO   07B
.................... #INT_CCP1           
.................... void  ngat_ccp1(void)  
.................... { 
....................     
.................... } 
.................... //______NGAT KHI CO CAPTURE HOAC COMPARE O BO CCP2_________ 
00F7:  BCF    0C.2
00F8:  BCF    0A.3
00F9:  BCF    0A.4
00FA:  GOTO   07B
.................... #INT_CCP2          
.................... void  ngat_ccp2(void)  
.................... { 
....................     
.................... } 
.................... //_____________NGAT KHI TRUYEN XONG DU LIEU RS232__________ 
00FB:  BCF    0D.0
00FC:  BCF    0A.3
00FD:  BCF    0A.4
00FE:  GOTO   07B
.................... #int_TBE 
.................... void  TBE_isr(void)  
.................... { 
....................  
.................... } 
.................... //_____________NGAT KHI NHAN 1 BYTE DU LIEU RS232__________ 
00FF:  BCF    0C.4
0100:  BCF    0A.3
0101:  BCF    0A.4
0102:  GOTO   07B
.................... #int_RDA 
.................... void  RDA_isr(void)  
.................... { 
....................  
.................... } 
.................... //______________NGAT KHI CO HOAT DONG SPI HOAC I2C__________ 
0103:  BCF    0C.5
0104:  BCF    0A.3
0105:  BCF    0A.4
0106:  GOTO   07B
.................... #int_SSP 
.................... void  SSP_isr(void)  
.................... { 
....................  
.................... } 
.................... //_____________NGAT KHI CO DU LIEU VAO CONG PSP______________ 
0107:  BCF    0C.3
0108:  BCF    0A.3
0109:  BCF    0A.4
010A:  GOTO   07B
.................... #int_PSP 
.................... void  PSP_isr(void)  
.................... { 
....................  
.................... } 
.................... //________________NGAT KHI CO XUNG DOT BUS________________ 
....................  
010B:  BCF    0C.7
010C:  BCF    0A.3
010D:  BCF    0A.4
010E:  GOTO   07B
.................... #int_BUSCOL 
.................... void  BUSCOL_isr(void)  
.................... { 
....................  
.................... } 
....................  
.................... //________NGAT HOAN THANH GHI DU LIEU VAO EEPROM____________ 
....................  
010F:  BCF    0D.3
0110:  BCF    0A.3
0111:  BCF    0A.4
0112:  GOTO   07B
.................... #int_EEPROM 
.................... void  EEPROM_isr(void)  
.................... { 
....................  
.................... } 
....................  
.................... //_________NGAT KHI CO BANG NHAU TREN BO COMPARATOR___________ 
....................  
0113:  BCF    0D.4
0114:  BCF    0A.3
0115:  BCF    0A.4
0116:  GOTO   07B
.................... #int_COMP 
.................... void  COMP_isr(void)  
.................... { 
....................  
.................... } 
....................  
.................... #endif 
....................  
.................... #include "timer.c" 
.................... #ifndef __TIMER_ 
0117:  BCF    0D.6
0118:  BCF    0A.3
0119:  BCF    0A.4
011A:  GOTO   07B
.................... #define __TIMER_ 
.................... void timer0_config() 
.................... { 
.................... ////////////////////////////////////////////////////////////// 
.................... //              Cau Hinh Timer 0                     // 
.................... //         T_tm0: Chu ky xung dem cua timer 0            // 
.................... //         T_osc: Chu ky dao dong su dung cho chip         // 
.................... ////////////////////////////////////////////////////////////// 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit);      //   T_tm0=T_osc*4*1 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_2|RTCC_8_bit);      //   T_tm0=T_osc*4*2 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4|RTCC_8_bit);      //   T_tm0=T_osc*4*4 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8|RTCC_8_bit);      //   T_tm0=T_osc*4*8 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_16|RTCC_8_bit);      //   T_tm0=T_osc*4*16 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_32|RTCC_8_bit);      //   T_tm0=T_osc*4*32 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64|RTCC_8_bit);      //   T_tm0=T_osc*4*64 
.................... //setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128|RTCC_8_bit);      //   T_tm0=T_osc*4*128 
.................... setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256|RTCC_8_BIT);      //   T_tm0=T_osc*4*256 
*
0263:  BSF    03.5
0264:  MOVF   01,W
0265:  ANDLW  C0
0266:  IORLW  07
0267:  MOVWF  01
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_1|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 1 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_2|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 2 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_4|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 4 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_8|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 8 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_16|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 16 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_32|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 32 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_64|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 64 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_128|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 128 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_L_TO_H|RTCC_DIV_256|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 256 xung len tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_1|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 1 suon xuong tai chan PIN_A4 (T0CKI)    
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_2|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 2 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_4|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 4 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_8|RTCC_8_bit);      //   Tang gia tri timer0 len 1 khi co 8 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_16|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 16 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_32|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 32 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_64|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 64 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_128|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 128 suon xuong tai chan PIN_A4 (T0CKI) 
.................... //setup_timer_0(RTCC_EXT_H_TO_L|RTCC_DIV_256|RTCC_8_bit);   //   Tang gia tri timer0 len 1 khi co 256 suon xuong tai chan PIN_A4 (T0CKI) 
....................  
.................... /******************Thiet lap ngat timer*********************/ 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //                   NGAT TRAN TIMER 0            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... enable_interrupts(INT_TIMER0);   //Cho phep ngat tran timer0 hoat dong 
0268:  BCF    03.5
0269:  BSF    0B.5
026A:  BCF    0A.3
026B:  BCF    0A.4
026C:  GOTO   352 (RETURN)
.................... //disable_interrupts(INT_TIMER0);   //Khong cho phep ngat tran timer0 hoat dong (mac dinh) 
....................  
.................... } 
.................... void timer1_config() 
.................... { 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_1);               // 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_2);               // 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_4);               // 
.................... //setup_timer_1(T1_INTERNAL|T1_DIV_BY_8);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_DIV_BY_1);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_CLK_OUT);               // 
.................... //setup_timer_1(T1_EXTERNAL|T1_EXTERNAL_SYNC);            // 
.................... //setup_timer_1(T1_EXTERNAL|T1_CLK_OUT|T1_EXTERNAL_SYNC);   // 
.................... setup_timer_1(T1_DISABLED);                           // 
....................  
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT TRAN TIMER 1            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //enable_interrupts(INT_TIMER1);   //Cho phep ngat tran timer1 hoat dong 
.................... disable_interrupts(INT_TIMER1);   //Khong cho phep ngat tran timer1 hoat dong (mac dinh) 
....................  
.................... } 
.................... void timer2_config() 
.................... { 
.................... //############################################################ 
.................... //              Cau Hinh Timer 2                     // 
.................... //         Over_Period: 1-255                        // 
.................... //         Int_Period : 1-16                        // 
.................... //         T_Ov   :Chu ky tran bo dem timer2            // 
.................... //         T_In   :Chu ky xay ra ngat tran timer 0      // 
.................... //         T_osc   : Chu ky dao dong su dung cho chip      // 
.................... //############################################################ 
....................  
.................... //setup_timer_2(T2_DIV_BY_1,Over_Period,Int_Period);      //   T_ov=T_osc*4*1*(1+Over_Period)   ;   T_In=T_osc*4*1*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DIV_BY_4,Over_Period,Int_Period);      //   T_ov=T_osc*4*4*(1+Over_Period)   ;   T_In=T_osc*4*4*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DIV_BY_16,Over_Period,Int_Period);      //   T_ov=T_osc*4*16*(1+Over_Period)   ;   T_In=T_osc*4*16*(1+Over_Period)*Int_Period 
.................... //setup_timer_2(T2_DISABLED,0,1);                      //   Khong su dung bo dem timer2 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
.................... //               NGAT TRAN TIMER 2            // 
.................... //++++++++++++++++++++++++++++++++++++++++++++++++++// 
....................  
.................... //enable_interrupts(INT_TIMER2);   //Cho phep ngat tran timer2 hoat dong 
.................... disable_interrupts(INT_TIMER2);   //Khong cho phep ngat tran timer2 hoat dong (mac dinh) 
.................... } 
.................... #endif 
....................  
....................  
.................... void main() 
*
0328:  MOVF   03,W
0329:  ANDLW  1F
032A:  MOVWF  03
032B:  BCF    2B.0
032C:  CLRF   2F
032D:  CLRF   2E
032E:  BSF    03.5
032F:  BSF    1F.0
0330:  BSF    1F.1
0331:  BSF    1F.2
0332:  BCF    1F.3
0333:  MOVLW  07
0334:  MOVWF  1C
0335:  BCF    03.7
.................... { 
....................    unsigned char str[20]; 
....................    LCD_Init(); 
0336:  BCF    03.5
0337:  GOTO   190
....................    sprintf(str,"   TEST TIMER"); 
0338:  CLRF   2F
0339:  MOVLW  30
033A:  MOVWF  2E
033B:  MOVLW  1B
033C:  BSF    03.6
033D:  MOVWF  0D
033E:  MOVLW  01
033F:  MOVWF  0F
0340:  BCF    03.6
0341:  GOTO   1D4
....................    delay_ms(10); 
0342:  MOVLW  0A
0343:  MOVWF  47
0344:  CALL   15B
....................    LCD_Puts(str); 
0345:  CLRF   45
0346:  MOVLW  30
0347:  MOVWF  44
0348:  CALL   22C
....................    delay_ms(1000); 
0349:  MOVLW  04
034A:  MOVWF  44
034B:  MOVLW  FA
034C:  MOVWF  47
034D:  CALL   15B
034E:  DECFSZ 44,F
034F:  GOTO   34B
....................    interrupt_config(); 
0350:  GOTO   251
....................    timer0_config(); 
0351:  GOTO   263
....................    while(TRUE) 
....................    { 
....................    if(enable_display) 
0352:  BTFSS  2B.0
0353:  GOTO   36E
....................       { 
....................       LCD_Gotoxy(0,1); 
0354:  CLRF   44
0355:  MOVLW  01
0356:  MOVWF  45
0357:  GOTO   26D
....................       sprintf(str,"Timer: %2u",Value); 
0358:  CLRF   2F
0359:  MOVLW  30
035A:  MOVWF  2E
035B:  MOVLW  22
035C:  BSF    03.6
035D:  MOVWF  0D
035E:  MOVLW  01
035F:  MOVWF  0F
0360:  BCF    03.0
0361:  MOVLW  07
0362:  BCF    03.6
0363:  MOVWF  44
0364:  GOTO   283
0365:  MOVF   2D,W
0366:  MOVWF  44
0367:  MOVLW  11
0368:  MOVWF  45
0369:  GOTO   2F1
....................       LCD_Puts(str); 
036A:  CLRF   45
036B:  MOVLW  30
036C:  MOVWF  44
036D:  CALL   22C
....................       } 
036E:  GOTO   352
....................    } 
.................... } 
036F:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
